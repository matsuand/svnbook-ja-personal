# Japanese translations for PACKAGE package
# Copyright (C) 2017 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2017-08-03 18:00+0900\n"
"PO-Revision-Date: 2017-08-03 18:00+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: matsuand個人翻訳\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Content of: <chapter><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4
msgid "Server Configuration"
msgstr ""

#. type: Content of: <chapter><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:6
msgid ""
"A Subversion repository can be accessed simultaneously by clients running on "
"the same machine on which the repository resides using URLs carrying the "
"<literal>file://</literal> scheme.  But the typical Subversion setup "
"involves a single server machine being accessed from clients on computers "
"all over the office&mdash;or, perhaps, all over the world."
msgstr ""

#. type: Content of: <chapter><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:13
msgid ""
"This chapter describes how to get your Subversion repository exposed outside "
"its host machine for use by remote clients.  We will cover Subversion's "
"currently available server mechanisms, discussing the configuration and use "
"of each.  After reading this chapter, you should be able to decide which "
"networking setup is right for your needs, as well as understand how to "
"enable such a setup on your host computer."
msgstr ""

#. type: Content of: <chapter><sect1><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:27
msgid "Overview"
msgstr ""

#. type: Content of: <chapter><sect1><para><indexterm><primary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:31
msgid "API"
msgstr ""

#. type: Content of: <chapter><sect1><para><indexterm><secondary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:32
msgid "layers"
msgstr ""

#. type: Content of: <chapter><sect1><para><indexterm><tertiary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:33
msgid "Repository Access (RA) Layer"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:33
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:517
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:576
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:644
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:695
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:731
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:834
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3669
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3674
msgid "<placeholder type=\"tertiary\" id=\"0\"/>"
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:30
msgid ""
"<placeholder type=\"indexterm\" id=\"0\"/>Subversion was designed with an "
"abstract repository access layer.  This means that a repository can be "
"programmatically accessed by any sort of server process, and the client "
"<quote>repository access</quote> API allows programmers to write plug-ins "
"that speak relevant network protocols.  In theory, Subversion can use an "
"infinite number of network implementations.  In practice, there are only two "
"Subversion servers in widespread use today."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><primary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:45
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:49
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3667
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3672
msgid "httpd"
msgstr ""

#. type: Content of: <chapter><sect1><para><indexterm><primary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:48
msgid "Apache HTTP Server"
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:44
msgid ""
"<placeholder type=\"indexterm\" id=\"0\"/> <placeholder type=\"indexterm\" "
"id=\"1\"/>Apache HTTP Server (also known as <command>httpd</command>) is an "
"extremely popular web server; using the <command>mod_dav_svn</command> "
"module, Apache can access a repository and make it available to clients via "
"the WebDAV/DeltaV protocol, which is an extension of HTTP.  Because Apache "
"is an extremely extensible server, it provides a number of features "
"<quote>for free,</quote> such as encrypted SSL communication, logging, "
"integration with a number of third-party authentication systems, and limited "
"built-in web browsing of repositories."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para><indexterm><primary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:63
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:101
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:461
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:478
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:515
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:574
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:642
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:693
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:729
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:832
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:975
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:979
msgid "svnserve"
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:62
msgid ""
"<placeholder type=\"indexterm\" id=\"0\"/>In the other corner is "
"<command>svnserve</command>: a small, lightweight server program that speaks "
"a custom protocol with clients.  Because its protocol is explicitly designed "
"for Subversion and is stateful (unlike HTTP), it provides significantly "
"faster network operations&mdash;but at the cost of some features as well.  "
"While it can use SASL to provide a variety of authentication and encryption "
"options, it has no logging or built-in web browsing.  It is, however, "
"extremely easy to set up and is often the best option for small teams just "
"starting out with Subversion."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:75
msgid ""
"The network protocol which <command>svnserve</command> speaks may also be "
"tunneled over an SSH connection.  This deployment option for "
"<command>svnserve</command> differs quite a bit in features from a "
"traditional <command>svnserve</command> deployment.  SSH is used to encrypt "
"all communication.  SSH is also used exclusively to authenticate, so real "
"system accounts are required on the server host (unlike vanilla "
"<command>svnserve</command>, which has its own private user accounts).  "
"Finally, because this setup requires that each user spawn a private, "
"temporary <command>svnserve</command> process, it's equivalent (from a "
"permissions point of view) to allowing a group of local users to all access "
"the repository via <literal>file://</literal> URLs.  Path-based access "
"control has no meaning, since each user is accessing the repository database "
"files directly."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:91
msgid ""
"<xref linkend=\"svn.serverconfig.overview.tbl-1\"/> provides a quick summary "
"of the three typical server deployments."
msgstr ""

#. type: Content of: <chapter><sect1><table><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:95
msgid "Comparison of Subversion server options"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><thead><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:99
msgid "Feature"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><thead><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:100
msgid "Apache + mod_dav_svn"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:102
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:255
msgid "svnserve over SSH"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:107
msgid "Authentication options"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:108
msgid ""
"HTTP Basic or Digest auth, X.509 certificates, LDAP, NTLM, or any other "
"mechanism available to Apache httpd"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:110
msgid ""
"CRAM-MD5 by default; LDAP, NTLM, or any other mechanism available to SASL"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:112
msgid "SSH"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:115
msgid "User account options"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:116
msgid ""
"Private <quote>users</quote> file, or other mechanisms available to Apache "
"httpd (LDAP, SQL, etc.)"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:118
msgid ""
"Private <quote>users</quote> file, or other mechanisms available to SASL "
"(LDAP, SQL, etc.)"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:120
msgid "System accounts"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:123
msgid "Authorization options"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:124
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:126
msgid ""
"Read/write access can be granted over the whole repository, or specified per "
"path"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:128
msgid "Read/write access only grantable over the whole repository"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:132
msgid "Encryption"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:133
msgid "Available via optional SSL (https)"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:134
msgid "Available via optional SASL features"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:135
msgid "Inherent in SSH connection"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:138
msgid "Logging"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:139
msgid ""
"High-level operational logging of Subversion operations plus detailed "
"logging at the per-HTTP-request level"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:142
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:143
msgid "High-level operational logging only"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:146
msgid "Interoperability"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:147
msgid "Accessible by other WebDAV clients"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:148
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:149
msgid "Talks only to svn clients"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:152
msgid "Web viewing"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:153
msgid "Limited built-in support, or via third-party tools such as ViewVC"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:155
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:156
msgid "Only via third-party tools such as ViewVC"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:159
msgid "Master-slave server replication"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:160
msgid "Transparent write-proxying available from slave to master"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:162
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:163
msgid "Can only create read-only slave servers"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:166
msgid "Speed"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:167
msgid "Somewhat slower"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:168
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:169
msgid "Somewhat faster"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:172
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1568
msgid "Initial setup"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:173
msgid "Somewhat complex"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:174
msgid "Extremely simple"
msgstr ""

#. type: Content of: <chapter><sect1><table><tgroup><tbody><row><entry>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:175
msgid "Moderately simple"
msgstr ""

#. type: Content of: <chapter><sect1><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:185
msgid "Choosing a Server Configuration"
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:187
msgid "So, which server should you use? Which is best?"
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:189
msgid ""
"Obviously, there's no right answer to that question.  Every team has "
"different needs, and the different servers all represent different sets of "
"trade-offs.  The Subversion project itself doesn't endorse one server or "
"another, or consider either server more <quote>official</quote> than another."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:195
msgid ""
"Here are some reasons why you might choose one deployment over another, as "
"well as reasons you might <emphasis>not</emphasis> choose one."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:202
msgid "The svnserve Server"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:206
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:259
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:310
msgid "Why you might want to use it:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:210
msgid "Quick and easy to set up."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:213
msgid "Network protocol is stateful and noticeably faster than WebDAV."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:217
msgid "No need to create system accounts on server."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:221
msgid "Password is not passed over the network."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:227
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:277
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:345
msgid "Why you might want to avoid it:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:231
msgid ""
"By default, only one authentication method is available, the network "
"protocol is not encrypted, and the server stores clear text passwords.  (All "
"these things can be changed by configuring SASL, but it's a bit more work to "
"do.)"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:238
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:285
msgid "No advanced logging facilities."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:241
msgid ""
"No built-in web browsing.  (You'd have to install a separate web server and "
"repository browsing software to add this.)"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:263
msgid "The network protocol is stateful and noticeably faster than WebDAV."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:267
msgid ""
"You can take advantage of existing SSH accounts and user infrastructure."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:271
msgid "All network traffic is encrypted."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:281
msgid "Only one choice of authentication method is available."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:288
msgid ""
"It requires users to be in the same system group, or use a shared SSH key."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:292
msgid "If used improperly, it can lead to file permission problems."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:306
msgid "The Apache HTTP Server"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:314
msgid ""
"It allows Subversion to use any of the numerous authentication systems "
"already integrated with Apache."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:319
msgid "There is no need to create system accounts on the server."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:323
msgid "Full Apache logging is available."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:326
msgid "Network traffic can be encrypted via SSL."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:329
msgid "HTTP(S) can usually go through corporate firewalls."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:333
msgid "Built-in repository browsing is available via web browser."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:337
msgid ""
"The repository can be mounted as a network drive for transparent version "
"control (see <xref linkend=\"svn.webdav.autoversioning\"/>)."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:349
msgid ""
"Noticeably slower than <command>svnserve</command>, because HTTP is a "
"stateless protocol and requires more network turnarounds."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><variablelist><varlistentry><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:354
msgid "Initial setup can be complex."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:367
msgid "Recommendations"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:369
msgid ""
"In general, the authors of this book recommend a vanilla <command>svnserve</"
"command> installation for small teams just trying to get started with a "
"Subversion server; it's the simplest to set up and has the fewest "
"maintenance issues.  You can always switch to a more complex server "
"deployment as your needs change."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:376
msgid ""
"Here are some general recommendations and tips, based on years of supporting "
"users:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:381
msgid ""
"If you're trying to set up the simplest possible server for your group, a "
"vanilla <command>svnserve</command> installation is the easiest, fastest "
"route.  Note, however, that your repository data will be transmitted in the "
"clear over the network.  If your deployment is entirely within your "
"company's LAN or VPN, this isn't an issue.  If the repository is exposed to "
"the wide-open Internet, you might want to make sure that either the "
"repository's contents aren't sensitive (e.g., it contains only open source "
"code), or that you go the extra mile in configuring SASL to encrypt network "
"communications."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:395
msgid ""
"If you need to integrate with existing legacy identity systems (LDAP, Active "
"Directory, NTLM, X.509, etc.), you must use either the Apache-based server "
"or <command>svnserve</command> configured with SASL."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:402
msgid ""
"If you've decided to use either Apache or stock <command>svnserve</command>, "
"create a single <command>svn</command> user on your system and run the "
"server process as that user.  Be sure to make the repository directory "
"wholly owned by the <command>svn</command> user as well.  From a security "
"point of view, this keeps the repository data nicely siloed and protected by "
"operating system filesystem permissions, changeable by only the Subversion "
"server process itself."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:414
msgid ""
"If you have an existing infrastructure that is heavily based on SSH "
"accounts, and if your users already have system accounts on your server "
"machine, it makes sense to deploy an <command>svnserve</command>-over-SSH "
"solution.  Otherwise, we don't widely recommend this option to the public.  "
"It's generally considered safer to have your users access the repository via "
"(imaginary) accounts managed by <command>svnserve</command> or Apache, "
"rather than by full-blown system accounts.  If your deep desire for "
"encrypted communication still draws you to this option, we recommend using "
"Apache with SSL or <command>svnserve</command> with SASL encryption instead."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:429
msgid ""
"Do <emphasis>not</emphasis> be seduced by the simple idea of having all of "
"your users access a repository directly via <literal>file://</literal> "
"URLs.  Even if the repository is readily available to everyone via a network "
"share, this is a bad idea.  It removes any layers of protection between the "
"users and the repository: users can accidentally (or intentionally) corrupt "
"the repository database, it becomes hard to take the repository offline for "
"inspection or upgrade, and it can lead to a mess of file permission problems "
"(see <xref linkend=\"svn.serverconfig.multimethod\"/>).  Note that this is "
"also one of the reasons we warn against accessing repositories via "
"<literal>svn+ssh://</literal> URLs&mdash;from a security standpoint, it's "
"effectively the same as local users accessing via <literal>file://</"
"literal>, and it can entail all the same problems if the administrator isn't "
"careful."
msgstr ""

#. type: Content of: <chapter><sect1><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:457
msgid "svnserve, a Custom Server"
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:460
msgid ""
"<placeholder type=\"indexterm\" id=\"0\"/>The <command>svnserve</command> "
"program is a lightweight server, capable of speaking to clients over TCP/IP "
"using a custom, stateful protocol.  Clients contact an <command>svnserve</"
"command> server by using URLs that begin with the <literal>svn://</literal> "
"or <literal>svn+ssh://</literal> scheme.  This section will explain the "
"different ways of running <command>svnserve</command>, how clients "
"authenticate themselves to the server, and how to configure appropriate "
"access control to your repositories."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:474
msgid "Invoking the Server"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><secondary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:479
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:516
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:575
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:643
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:694
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:730
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:833
msgid "running"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:477
msgid ""
"<placeholder type=\"indexterm\" id=\"0\"/>There are a few different ways to "
"run the <command>svnserve</command> program:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:485
msgid ""
"Run <command>svnserve</command> as a standalone daemon, listening for "
"requests."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:489
msgid ""
"Have the Unix <command>inetd</command> daemon temporarily spawn "
"<command>svnserve</command> whenever a request comes in on a certain port."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:494
msgid ""
"Have SSH invoke a temporary <command>svnserve</command> over an encrypted "
"tunnel."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:498
msgid "Run <command>svnserve</command> as a Microsoft Windows service."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:502
msgid "Run <command>svnserve</command> as a launchd job."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:506
msgid ""
"The following sections will cover in detail these various deployment options "
"for <command>svnserve</command>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:511
msgid "svnserve as daemon"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><tertiary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:517
msgid "daemon mode"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:514
msgid ""
"<placeholder type=\"indexterm\" id=\"0\"/>The easiest option is to run "
"<command>svnserve</command> as a standalone <quote>daemon</quote> process.  "
"Use the <option>-d</option> option for this:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:524
#, no-wrap
msgid ""
"$ svnserve -d\n"
"$               # svnserve is now running, listening on port 3690\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:529
msgid ""
"When running <command>svnserve</command> in daemon mode, you can use the "
"<option>--listen-port</option> and <option>--listen-host</option> options to "
"customize the exact port and hostname to <quote>bind</quote> to."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:534
msgid ""
"Once we successfully start <command>svnserve</command> as explained "
"previously, it makes every repository on your system available to the "
"network.  A client needs to specify an <emphasis>absolute</emphasis> path in "
"the repository URL.  For example, if a repository is located at <filename>/"
"var/svn/project1</filename>, a client would reach it via <uri>svn://host."
"example.com/var/svn/project1</uri>.  To increase security, you can pass the "
"<option>-r</option> option to <command>svnserve</command>, which restricts "
"it to exporting only repositories below that path.  For example:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:548
#, no-wrap
msgid ""
"$ svnserve -d -r /var/svn\n"
"&hellip;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:553
msgid ""
"Using the <option>-r</option> option effectively modifies the location that "
"the program treats as the root of the remote filesystem space.  Clients then "
"use URLs that have that path portion removed from them, leaving much shorter "
"(and much less revealing) URLs:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:561
#, no-wrap
msgid ""
"$ svn checkout svn://host.example.com/project1\n"
"&hellip;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:570
msgid "svnserve via inetd"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><tertiary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:576
msgid "via inetd"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><primary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:579
msgid "inetd"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:573
msgid ""
"<placeholder type=\"indexterm\" id=\"0\"/> <placeholder type=\"indexterm\" "
"id=\"1\"/>If you want <command>inetd</command> to launch the process, you "
"need to pass the <option>-i</option> (<option>--inetd</option>) option.  In "
"the following example, we've shown the output from running <literal>svnserve "
"-i</literal> at the command line, but note that this isn't how you actually "
"start the daemon; see the paragraphs following the example for how to "
"configure <command>inetd</command> to start <command>svnserve</command>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:592
#, no-wrap
msgid ""
"$ svnserve -i\n"
"( success ( 2 2 ( ) ( edit-pipeline svndiff1 absent-entries commit-revprops d\\\n"
"epth log-revprops atomic-revprops partial-replay ) ) )\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:598
msgid ""
"When invoked with the <option>--inetd</option> option, <command>svnserve</"
"command> attempts to speak with a Subversion client via <filename>stdin</"
"filename> and <filename>stdout</filename> using a custom protocol.  This is "
"the standard behavior for a program being run via <command>inetd</command>.  "
"The IANA has reserved port 3690 for the Subversion protocol, so on a Unix-"
"like system you can add lines to <filename>/etc/services</filename> such as "
"these (if they don't already exist):"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:610
#, no-wrap
msgid ""
"svn           3690/tcp   # Subversion\n"
"svn           3690/udp   # Subversion\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:615
msgid ""
"If your system is using a classic Unix-like <command>inetd</command> daemon, "
"you can add this line to <filename>/etc/inetd.conf</filename>:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:621
#, no-wrap
msgid "svn stream tcp nowait svnowner /usr/bin/svnserve svnserve -i\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:625
msgid ""
"Make sure <quote>svnowner</quote> is a user that has appropriate permissions "
"to access your repositories.  Now, when a client connection comes into your "
"server on port 3690, <command>inetd</command> will spawn an "
"<command>svnserve</command> process to service it.  Of course, you may also "
"want to add <option>-r</option> to the configuration line as well, to "
"restrict which repositories are exported."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:638
msgid "svnserve via xinetd"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><tertiary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:644
msgid "via xinetd"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><primary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:647
msgid "xinetd"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:641
msgid ""
"<placeholder type=\"indexterm\" id=\"0\"/> <placeholder type=\"indexterm\" "
"id=\"1\"/>Some operating systems provide the <command>xinetd</command> "
"daemon as an alternative to <command>inetd</command>.  Fortunately, you can "
"configure <command>svnserve</command> for use with <command>xinetd</"
"command>, too.  To do so, you'll need to create a configuration file "
"<filename>/etc/xinetd.d/svn</filename> with the following contents:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:657
#, no-wrap
msgid ""
"# default: on\n"
"# description: Subversion server for the svn protocol\n"
"service svn\n"
"{\n"
"  disabled        = no\n"
"  port            = 3690\n"
"  socket_type     = stream\n"
"  protocol        = tcp\n"
"  wait            = no\n"
"  user            = subversion\n"
"  server          = /usr/local/bin/svnserve\n"
"  server_args     = -i -r <replaceable>/path/to/repositories</replaceable>\n"
"}\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:673
msgid ""
"Be sure that your <filename>/etc/services</filename> configuration file "
"contains the definition of the port used for the <literal>svn</literal> "
"protocol (as described in <xref linkend=\"svn.serverconfig.svnserve.invoking."
"xinetd\" />), otherwise the daemon will not start correctly."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:679
msgid ""
"In Redhat-based distributions, you then need to activate the new service "
"using <command>chkconfig --add svn</command>.  After doing so, you will be "
"able to enable and disable the server using the graphical configuration "
"tools."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:689
msgid "svnserve over a tunnel"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><tertiary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:695
msgid "tunnel mode"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:692
msgid ""
"<placeholder type=\"indexterm\" id=\"0\"/>Another way to invoke "
"<command>svnserve</command> is in tunnel mode, using the <option>-t</option> "
"option.  This mode assumes that a remote-service program such as "
"<command>rsh</command> or <command>ssh</command> has successfully "
"authenticated a user and is now invoking a private <command>svnserve</"
"command> process <emphasis>as that user</emphasis>.  (Note that you, the "
"user, will rarely, if ever, have reason to invoke <command>svnserve</"
"command> with the <option>-t</option> at the command line; instead, the SSH "
"daemon does so for you.)  The <command>svnserve</command> program behaves "
"normally (communicating via <filename>stdin</filename> and <filename>stdout</"
"filename>)  and assumes that the traffic is being automatically redirected "
"over some sort of tunnel back to the client.  When <command>svnserve</"
"command> is invoked by a tunnel agent like this, be sure that the "
"authenticated user has full read and write access to the repository database "
"files.  It's essentially the same as a local user accessing the repository "
"via <literal>file://</literal> URLs."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:717
msgid ""
"This option is described in much more detail later in this chapter in <xref "
"linkend=\"svn.serverconfig.svnserve.sshauth\"/>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:725
msgid "svnserve as a Windows service"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><tertiary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:731
msgid "as Windows service"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:728
msgid ""
"<placeholder type=\"indexterm\" id=\"0\"/>If your Windows system is a "
"descendant of Windows NT (Windows 2000 or newer), you can run "
"<command>svnserve</command> as a standard Windows service.  This is "
"typically a much nicer experience than running it as a standalone daemon "
"with the <option>--daemon</option> (<option>-d</option>) option.  Using "
"daemon mode requires launching a console, typing a command, and then leaving "
"the console window running indefinitely.  A Windows service, however, runs "
"in the background, can start at boot time automatically, and can be started "
"and stopped using the same consistent administration interface as other "
"Windows services."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:745
msgid ""
"You'll need to define the new service using the command-line tool "
"<command>SC.EXE</command>.  Much like the <command>inetd</command> "
"configuration line, you must specify an exact invocation of "
"<command>svnserve</command> for Windows to run at startup time:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:753
#, no-wrap
msgid ""
"C:\\&gt; sc create svn\n"
"        binpath= \"C:\\svn\\bin\\svnserve.exe --service -r C:\\repos\"\n"
"        displayname= \"Subversion Server\"\n"
"        depend= Tcpip\n"
"        start= auto\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:761
msgid ""
"This defines a new Windows service named <literal>svn</literal> which "
"executes a particular <command>svnserve.exe</command> command when started "
"(in this case, rooted at <filename>C:\\repos</filename>).  There are a "
"number of caveats in the prior example, however."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:768
msgid ""
"First, notice that the <command>svnserve.exe</command> program must always "
"be invoked with the <option>--service</option> option.  Any other options to "
"<command>svnserve</command> must then be specified on the same line, but you "
"cannot add conflicting options such as <option>--daemon</option> (<option>-"
"d</option>), <option>--tunnel</option>, or <option>--inetd</option> "
"(<option>-i</option>).  Options such as <option>-r</option> or <option>--"
"listen-port</option> are fine, though.  Second, be careful about spaces when "
"invoking the <command>SC.EXE</command> command: the <literal>key= value</"
"literal> patterns must have no spaces between <literal>key=</literal> and "
"must have exactly one space before the <literal>value</literal>.  Lastly, be "
"careful about spaces in your command line to be invoked.  If a directory "
"name contains spaces (or other characters that need escaping), place the "
"entire inner value of <literal>binpath</literal> in double quotes, by "
"escaping them:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:791
#, no-wrap
msgid ""
"C:\\&gt; sc create svn\n"
"        binpath= \"\\\"C:\\program files\\svn\\bin\\svnserve.exe\\\" --service -r C:\\repos\"\n"
"        displayname= \"Subversion Server\"\n"
"        depend= Tcpip\n"
"        start= auto\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:799
msgid ""
"Also note that the word <literal>binpath</literal> is misleading&mdash;its "
"value is a <emphasis>command line</emphasis>, not the path to an "
"executable.  That's why you need to surround it with quotes if it contains "
"embedded spaces."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:805
msgid ""
"Once the service is defined, it can be stopped, started, or queried using "
"standard GUI tools (the Services administrative control panel), or at the "
"command line:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:812
#, no-wrap
msgid ""
"C:\\&gt; net stop svn\n"
"C:\\&gt; net start svn\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:817
msgid ""
"The service can also be uninstalled (i.e., undefined) by deleting its "
"definition: <userinput>sc delete svn</userinput>.  Just be sure to stop the "
"service first! The <command>SC.EXE</command> program has many other "
"subcommands and options; run <userinput>sc /?</userinput> to learn more "
"about it."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:828
msgid "svnserve as a launchd job"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><tertiary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:834
msgid "via launchd"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><primary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:837
msgid "launchd"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:831
msgid ""
"<placeholder type=\"indexterm\" id=\"0\"/> <placeholder type=\"indexterm\" "
"id=\"1\"/>Mac OS X (10.4 and higher) uses <command>launchd</command> to "
"manage processes (including daemons) both system-wide and per-user.  A "
"<command>launchd</command> job is specified by parameters in an XML property "
"list file, and the <command>launchctl</command> command is used to manage "
"the lifecycle of those jobs."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:845
msgid ""
"When configured to run as a <command>launchd</command> job, "
"<command>svnserve</command> is automatically launched on demand whenever "
"incoming Subversion <literal>svn://</literal> network traffic needs to be "
"handled.  This is far more convenient than a configuration which requires "
"you to manually invoke <command>svnserve</command> as a long-running "
"background process."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:854
msgid ""
"To configure <command>svnserve</command> as a <command>launchd</command> "
"job, first create a job definition file named <filename>/Library/"
"LaunchDaemons/org.apache.subversion.svnserve.plist</filename>.  <xref "
"linkend=\"svn.serverconfig.svnserve.invoking.launchd.ex-1\"/> provides an "
"example of such a file."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:862
msgid "A sample svnserve launchd job definition"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:864
#, no-wrap
msgid ""
"&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n"
"&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\"\n"
"    \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;\n"
"&lt;plist version=\"1.0\"&gt;\n"
"    &lt;dict&gt;\n"
"        &lt;key&gt;Label&lt;/key&gt;\n"
"        &lt;string&gt;org.apache.subversion.svnserve&lt;/string&gt;\n"
"        &lt;key&gt;ServiceDescription&lt;/key&gt;\n"
"        &lt;string&gt;Host Subversion repositories using svn:// scheme&lt;/string&gt;\n"
"        &lt;key&gt;ProgramArguments&lt;/key&gt;\n"
"        &lt;array&gt;\n"
"            &lt;string&gt;/usr/bin/svnserve&lt;/string&gt;\n"
"            &lt;string&gt;--inetd&lt;/string&gt;\n"
"            &lt;string&gt;--root=/var/svn&lt;/string&gt;\n"
"        &lt;/array&gt;\n"
"        &lt;key&gt;UserName&lt;/key&gt;\n"
"        &lt;string&gt;svn&lt;/string&gt;\n"
"        &lt;key&gt;GroupName&lt;/key&gt;\n"
"        &lt;string&gt;svn&lt;/string&gt;\n"
"        &lt;key&gt;inetdCompatibility&lt;/key&gt;\n"
"        &lt;dict&gt;\n"
"            &lt;key&gt;Wait&lt;/key&gt;\n"
"            &lt;false/&gt;\n"
"        &lt;/dict&gt;\n"
"        &lt;key&gt;Sockets&lt;/key&gt;\n"
"        &lt;dict&gt;\n"
"            &lt;key&gt;Listeners&lt;/key&gt;\n"
"            &lt;array&gt;\n"
"                &lt;dict&gt;\n"
"                    &lt;key&gt;SockServiceName&lt;/key&gt;\n"
"                    &lt;string&gt;svn&lt;/string&gt;\n"
"                    &lt;key&gt;Bonjour&lt;/key&gt;\n"
"                    &lt;true/&gt;\n"
"                &lt;/dict&gt;\n"
"            &lt;/array&gt;\n"
"        &lt;/dict&gt;\n"
"    &lt;/dict&gt;\n"
"&lt;/plist&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:863
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2690
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2712
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2745
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2822
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2864
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2879
msgid "<placeholder type=\"programlisting\" id=\"0\"/>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><warning><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:906
msgid ""
"The <command>launchd</command> system can be somewhat challenging to learn.  "
"Fortunately, documentation exists for the commands described in this "
"section. For example, run <userinput>man launchd</userinput> from the "
"command line to see the manual page for <command>launchd</command> itself, "
"<userinput>man launchd.plist</userinput> to read about the job definition "
"format, etc."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:915
msgid ""
"Once your job definition file is created, you can activate the job using "
"<command>launchctl load</command>:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:920
#, no-wrap
msgid ""
"$ sudo launchctl load \\\n"
"       -w /Library/LaunchDaemons/org.apache.subversion.svnserve.plist\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:925
msgid ""
"To be clear, this action doesn't actually launch <command>svnserve</command> "
"yet.  It simply tells <command>launchd</command> how to fire up "
"<command>svnserve</command> when incoming networking traffic arrives on the "
"<literal>svn</literal> network port; it will be terminated it after the "
"traffic has been handled."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><note><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:933
msgid ""
"Because we want <command>svnserve</command> to be a system-wide daemon "
"process, we need to use <command>sudo</command> to manage this job as an "
"administrator.  Note also that the <literal>UserName</literal> and "
"<literal>GroupName</literal> keys in the definition file are optional&mdash;"
"if omitted, the job will run as the user who loaded the job."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:943
msgid ""
"Deactivating the job is just as easy to do&mdash;use <command>launchctl "
"unload</command>:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:948
#, no-wrap
msgid ""
"$ sudo launchctl unload \\\n"
"       -w /Library/LaunchDaemons/org.apache.subversion.svnserve.plist\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:953
msgid ""
"<command>launchctl</command> also provides a way for you to query the status "
"of jobs.  If the job is loaded, there will be line which matches the "
"<literal>Label</literal> specified in the job definition file:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:960
#, no-wrap
msgid ""
"$ sudo launchctl list | grep org.apache.subversion.svnserve\n"
"-       0       org.apache.subversion.svnserve\n"
"$\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:971
msgid "Built-in Authentication and Authorization"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para><indexterm><secondary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:976
msgid "authentication"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para><indexterm><secondary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:980
msgid "authorization"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:974
msgid ""
"<placeholder type=\"indexterm\" id=\"0\"/> <placeholder type=\"indexterm\" "
"id=\"1\"/>When a client connects to an <command>svnserve</command> process, "
"the following things happen:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:986
msgid "The client selects a specific repository."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:989
msgid ""
"The server processes the repository's <filename>conf/svnserve.conf</"
"filename> file and begins to enforce any authentication and authorization "
"policies it describes."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:995
msgid "Depending on the defined policies, one of the following may occur:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:999
msgid ""
"The client may be allowed to make requests anonymously, without ever "
"receiving an authentication challenge."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1004
msgid "The client may be challenged for authentication at any time."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1008
msgid ""
"If operating in tunnel mode, the client will declare itself to be already "
"externally authenticated (typically by SSH)."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para><footnote><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1017
msgid "See RFC 2195."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1016
msgid ""
"The <command>svnserve</command> server, by default, knows only how to send a "
"CRAM-MD5<placeholder type=\"footnote\" id=\"0\"/> authentication challenge.  "
"In essence, the server sends a small amount of data to the client.  The "
"client uses the MD5 hash algorithm to create a fingerprint of the data and "
"password combined, and then sends the fingerprint as a response.  The server "
"performs the same computation with the stored password to verify that the "
"result is identical.  <emphasis>At no point does the actual password travel "
"over the network.</emphasis>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1027
msgid ""
"If your <command>svnserve</command> server was built with SASL support, it "
"not only knows how to send CRAM-MD5 challenges, but also likely knows a "
"whole host of other authentication mechanisms.  See <xref linkend=\"svn."
"serverconfig.svnserve.sasl\"/> later in this chapter to learn how to "
"configure SASL authentication and encryption."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1035
msgid ""
"It's also possible, of course, for the client to be externally authenticated "
"via a tunnel agent, such as <command>ssh</command>.  In that case, the "
"server simply examines the user it's running as, and uses this name as the "
"authenticated username.  For more on this, see the later section, <xref "
"linkend=\"svn.serverconfig.svnserve.sshauth\"/>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1043
msgid ""
"As you've already guessed, a repository's <filename>svnserve.conf</filename> "
"file is the central mechanism for controlling authentication and "
"authorization policies.  The file has the same format as other configuration "
"files (see <xref linkend=\"svn.advanced.confarea\"/>): section names are "
"marked by square brackets (<literal>[</literal> and <literal>]</literal>), "
"comments begin with hashes (<literal>#</literal>), and each section contains "
"specific variables that can be set (<literal>variable = value</literal>).  "
"Let's walk through these files and learn how to use them."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1057
msgid "Create a users file and realm"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1059
msgid ""
"For now, the <literal>[general]</literal> section of <filename>svnserve."
"conf</filename> has all the variables you need.  Begin by changing the "
"values of those variables: choose a name for a file that will contain your "
"usernames and passwords and choose an authentication realm:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1067
#, no-wrap
msgid ""
"[general]\n"
"password-db = userfile\n"
"realm = example realm\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1073
msgid ""
"The <literal>realm</literal> is a name that you define.  It tells clients "
"which sort of <quote>authentication namespace</quote> they're connecting to; "
"the Subversion client displays it in the authentication prompt and uses it "
"as a key (along with the server's hostname and port) for caching credentials "
"on disk (see <xref linkend=\"svn.serverconfig.netmodel.credcache\"/>).  The "
"<literal>password-db</literal> variable points to a separate file that "
"contains a list of usernames and passwords, using the same familiar format.  "
"For example:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1086
#, no-wrap
msgid ""
"[users]\n"
"harry = foopassword\n"
"sally = barpassword\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1092
msgid ""
"The value of <literal>password-db</literal> can be an absolute or relative "
"path to the users file.  For many admins, it's easy to keep the file right "
"in the <filename>conf/</filename> area of the repository, alongside "
"<filename>svnserve.conf</filename>.  On the other hand, it's possible you "
"may want to have two or more repositories share the same users file; in that "
"case, the file should probably live in a more public place.  The "
"repositories sharing the users file should also be configured to have the "
"same realm, since the list of users essentially defines an authentication "
"realm.  Wherever the file lives, be sure to set the file's read and write "
"permissions appropriately.  If you know which user(s) <command>svnserve</"
"command> will run as, restrict read access to the users file as necessary."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1111
msgid "Set access controls"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1113
msgid ""
"There are two more variables to set in the <filename>svnserve.conf</"
"filename> file: they determine what unauthenticated (anonymous) and "
"authenticated users are allowed to do.  The variables <literal>anon-access</"
"literal> and <literal>auth-access</literal> can be set to the value "
"<literal>none</literal>, <literal>read</literal>, or <literal>write</"
"literal>.  Setting the value to <literal>none</literal> prohibits both "
"reading and writing; <literal>read</literal> allows read-only access to the "
"repository, and <literal>write</literal> allows complete read/write access "
"to the repository.  For example:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1127
#, no-wrap
msgid ""
"[general]\n"
"password-db = userfile\n"
"realm = example realm\n"
"\n"
"# anonymous users can only read the repository\n"
"anon-access = read\n"
"\n"
"# authenticated users can both read and write\n"
"auth-access = write\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1139
msgid ""
"The example settings are, in fact, the default values of the variables, "
"should you forget to define them.  If you want to be even more conservative, "
"you can block anonymous access completely:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1146
#, no-wrap
msgid ""
"[general]\n"
"password-db = userfile\n"
"realm = example realm\n"
"\n"
"# anonymous users aren't allowed\n"
"anon-access = none\n"
"\n"
"# authenticated users can both read and write\n"
"auth-access = write\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1158
msgid ""
"The server process understands not only these <quote>blanket</quote> access "
"controls to the repository, but also finer-grained access restrictions "
"placed on specific files and directories within the repository.  To make use "
"of this feature, you need to define a file containing more detailed rules, "
"and then set the <literal>authz-db</literal> variable to point to it:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1169
#, no-wrap
msgid ""
"[general]\n"
"password-db = userfile\n"
"realm = example realm\n"
"\n"
"# Specific access rules for specific locations\n"
"authz-db = authzfile\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1178
msgid ""
"We discuss the syntax of the <filename>authzfile</filename> file in detail "
"later in this chapter, in <xref linkend=\"svn.serverconfig.pathbasedauthz\"/"
">.  Note that the <literal>authz-db</literal> variable isn't mutually "
"exclusive with the <literal>anon-access</literal> and <literal>auth-access</"
"literal> variables; if all the variables are defined at once, <emphasis>all</"
"emphasis> of the rules must be satisfied before access is allowed."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1192
msgid "Using svnserve with SASL"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1194
msgid ""
"For many teams, the built-in CRAM-MD5 authentication is all they need from "
"<command>svnserve</command>.  However, if your server (and your Subversion "
"clients) were built with the Cyrus Simple Authentication and Security Layer "
"(SASL) library, you have a number of authentication and encryption options "
"available to you."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sidebar><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1202
msgid "What Is SASL?"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sidebar><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1204
msgid ""
"The Cyrus Simple Authentication and Security Layer is open source software "
"written by Carnegie Mellon University.  It adds generic authentication and "
"encryption capabilities to any network protocol, and as of Subversion 1.5 "
"and later, both the <command>svnserve</command> server and <command>svn</"
"command> client know how to make use of this library.  It may or may not be "
"available to you: if you're building Subversion yourself, you'll need to "
"have at least version 2.1 of SASL installed on your system, and you'll need "
"to make sure that it's detected during Subversion's build process.  The "
"Subversion command-line client will report the availability of Cyrus SASL "
"when you run <userinput>svn --version</userinput>; if you're using some "
"other Subversion client, you might need to check with the package maintainer "
"as to whether SASL support was compiled in."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sidebar><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1221
msgid ""
"SASL comes with a number of pluggable modules that represent different "
"authentication systems: Kerberos (GSSAPI), NTLM, One-Time-Passwords (OTP), "
"DIGEST-MD5, LDAP, Secure-Remote-Password (SRP), and others.  Certain "
"mechanisms may or may not be available to you; be sure to check which "
"modules are provided."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sidebar><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1228
msgid ""
"You can download Cyrus SASL (both code and documentation) from <ulink url="
"\"http://asg.web.cmu.edu/sasl/sasl-library.html\" />."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1235
msgid ""
"Normally, when a subversion client connects to <command>svnserve</command>, "
"the server sends a greeting that advertises a list of the capabilities it "
"supports, and the client responds with a similar list of capabilities.  If "
"the server is configured to require authentication, it then sends a "
"challenge that lists the authentication mechanisms available; the client "
"responds by choosing one of the mechanisms, and then authentication is "
"carried out in some number of round-trip messages.  Even when SASL "
"capabilities aren't present, the client and server inherently know how to "
"use the CRAM-MD5 and ANONYMOUS mechanisms (see <xref linkend=\"svn."
"serverconfig.svnserve.auth\"/>).  If server and client were linked against "
"SASL, a number of other authentication mechanisms may also be available.  "
"However, you'll need to explicitly configure SASL on the server side to "
"advertise them."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1253
msgid "Authenticating with SASL"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1255
msgid ""
"To activate specific SASL mechanisms on the server, you'll need to do two "
"things.  First, create a <literal>[sasl]</literal> section in your "
"repository's <filename>svnserve.conf</filename> file with an initial key-"
"value pair:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1263
#, no-wrap
msgid ""
"[sasl]\n"
"use-sasl = true\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1268
msgid ""
"Second, create a main SASL configuration file called <filename>svn.conf</"
"filename> in a place where the SASL library can find it&mdash;typically in "
"the directory where SASL plug-ins are located.  You'll have to locate the "
"plug-in directory on your particular system, such as <filename>/usr/lib/"
"sasl2/</filename> or <filename>/etc/sasl2/</filename>.  (Note that this is "
"<emphasis>not</emphasis> the <filename>svnserve.conf</filename> file that "
"lives within a repository!)"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1279
msgid ""
"On a Windows server, you'll also have to edit the system registry (using a "
"tool such as <command>regedit</command>)  to tell SASL where to find "
"things.  Create a registry key named <literal>[HKEY_LOCAL_MACHINE\\SOFTWARE"
"\\Carnegie Mellon\\Project Cyrus\\SASL Library]</literal>, and place two "
"keys inside it: a key called <literal>SearchPath</literal> (whose value is a "
"path to the directory containing the SASL <filename>sasl*.dll</filename> "
"plug-in libraries), and a key called <literal>ConfFile</literal> (whose "
"value is a path to the parent directory containing the <filename>svn.conf</"
"filename> file you created)."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1292
msgid ""
"Because SASL provides so many different kinds of authentication mechanisms, "
"it would be foolish (and far beyond the scope of this book) to try to "
"describe every possible server-side configuration.  Instead, we recommend "
"that you read the documentation supplied in the <filename>doc/</filename> "
"subdirectory of the SASL source code.  It goes into great detail about every "
"mechanism and how to configure the server appropriately for each.  For the "
"purposes of this discussion, we'll just demonstrate a simple example of "
"configuring the DIGEST-MD5 mechanism.  For example, if your "
"<filename>subversion.conf</filename> (or <filename>svn.conf</filename>) file "
"contains the following:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1308
#, no-wrap
msgid ""
"pwcheck_method: auxprop\n"
"auxprop_plugin: sasldb\n"
"sasldb_path: /etc/my_sasldb\n"
"mech_list: DIGEST-MD5\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1315
msgid ""
"you've told SASL to advertise the DIGEST-MD5 mechanism to clients and to "
"check user passwords against a private password database located at "
"<filename>/etc/my_sasldb</filename>.  A system administrator can then use "
"the <command>saslpasswd2</command> program to add or modify usernames and "
"passwords in the database:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1325
#, no-wrap
msgid "$ saslpasswd2 -c -f /etc/my_sasldb -u realm username\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1329
msgid ""
"A few words of warning: first, make sure the <quote>realm</quote> argument "
"to <command>saslpasswd2</command> matches the same realm you've defined in "
"your repository's <filename>svnserve.conf</filename> file; if they don't "
"match, authentication will fail.  Also, due to a shortcoming in SASL, the "
"common realm must be a string with no space characters.  Finally, if you "
"decide to go with the standard SASL password database, make sure the "
"<command>svnserve</command> program has read access to the file (and "
"possibly write access as well, if you're using a mechanism such as OTP)."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1342
msgid ""
"This is just one simple way of configuring SASL.  Many other authentication "
"mechanisms are available, and passwords can be stored in other places such "
"as in LDAP or a SQL database.  Consult the full SASL documentation for "
"details."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1348
msgid ""
"Remember that if you configure your server to only allow certain SASL "
"authentication mechanisms, this forces all connecting clients to have SASL "
"support as well.  Any Subversion client built without SASL support (which "
"includes all pre-1.5 clients) will be unable to authenticate.  On the one "
"hand, this sort of restriction may be exactly what you want (<quote>My "
"clients must all use Kerberos!</quote>).  However, if you still want non-"
"SASL clients to be able to authenticate, be sure to advertise the CRAM-MD5 "
"mechanism as an option.  All clients are able to use CRAM-MD5, whether they "
"have SASL capabilities or not."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1363
msgid "SASL encryption"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1365
msgid ""
"SASL is also able to perform data encryption if a particular mechanism "
"supports it.  The built-in CRAM-MD5 mechanism doesn't support encryption, "
"but DIGEST-MD5 does, and mechanisms such as SRP actually require use of the "
"OpenSSL library.  To enable or disable different levels of encryption, you "
"can set two values in your repository's <filename>svnserve.conf</filename> "
"file:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1375
#, no-wrap
msgid ""
"[sasl]\n"
"use-sasl = true\n"
"min-encryption = 128\n"
"max-encryption = 256\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1382
msgid ""
"The <literal>min-encryption</literal> and <literal>max-encryption</literal> "
"variables control the level of encryption demanded by the server.  To "
"disable encryption completely, set both values to 0.  To enable simple "
"checksumming of data (i.e., prevent tampering and guarantee data integrity "
"without encryption), set both values to 1.  If you wish to allow&mdash;but "
"not require&mdash;encryption, set the minimum value to 0, and the maximum "
"value to some bit length.  To require encryption unconditionally, set both "
"values to numbers greater than 1.  In our previous example, we require "
"clients to do at least 128-bit encryption, but no more than 256-bit "
"encryption."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1401
msgid "Tunneling over SSH"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1403
msgid ""
"<command>svnserve</command>'s built-in authentication (and SASL support) can "
"be very handy, because it avoids the need to create real system accounts.  "
"On the other hand, some administrators already have well-established SSH "
"authentication frameworks in place.  In these situations, all of the "
"project's users already have system accounts and the ability to <quote>SSH "
"into</quote> the server machine."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1411
msgid ""
"It's easy to use SSH in conjunction with <command>svnserve</command>.  The "
"client simply uses the <literal>svn+ssh://</literal> URL scheme to connect:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1417
#, no-wrap
msgid ""
"$ whoami\n"
"harry\n"
"\n"
"$ svn list svn+ssh://host.example.com/repos/project\n"
"harryssh@host.example.com's password:  *****\n"
"\n"
"foo\n"
"bar\n"
"baz\n"
"&hellip;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1430
msgid ""
"In this example, the Subversion client is invoking a local <command>ssh</"
"command> process, connecting to <literal>host.example.com</literal>, "
"authenticating as the user <literal>harryssh</literal> (according to SSH "
"user configuration), then spawning a private <command>svnserve</command> "
"process on the remote machine running as the user <literal>harryssh</"
"literal>.  The <command>svnserve</command> command is being invoked in "
"tunnel mode (<option>-t</option>), and its network protocol is being "
"<quote>tunneled</quote> over the encrypted connection by <command>ssh</"
"command>, the tunnel agent.  If the client performs a commit, the "
"authenticated username <literal>harryssh</literal> will be used as the "
"author of the new revision."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1445
msgid ""
"The important thing to understand here is that the Subversion client is "
"<emphasis>not</emphasis> connecting to a running <command>svnserve</command> "
"daemon.  This method of access doesn't require a daemon, nor does it notice "
"one if present.  It relies wholly on the ability of <command>ssh</command> "
"to spawn a temporary <command>svnserve</command> process, which then "
"terminates when the network connection is closed."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1454
msgid ""
"When using <literal>svn+ssh://</literal> URLs to access a repository, "
"remember that it's the <command>ssh</command> program prompting for "
"authentication, and <emphasis>not</emphasis> the <command>svn</command> "
"client program.  That means there's no automatic password-caching going on "
"(see <xref linkend=\"svn.serverconfig.netmodel.credcache\"/>).  The "
"Subversion client often makes multiple connections to the repository, though "
"users don't normally notice this due to the password caching feature.  When "
"using <literal>svn+ssh://</literal> URLs, however, users may be annoyed by "
"<command>ssh</command> repeatedly asking for a password for every outbound "
"connection.  The solution is to use a separate SSH password-caching tool "
"such as <command>ssh-agent</command> on a Unix-like system, or "
"<command>pageant</command> on Windows."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para><footnote><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1482
msgid ""
"Note that using any sort of <command>svnserve</command>-enforced access "
"control at all only makes sense if the users cannot bypass it and access the "
"repository directory directly using other tools (such as <command>cd</"
"command> and <command>vi</command>); implementing such restrictions is "
"described in <xref linkend=\"svn.serverconfig.svnserve.sshtricks.fixedcmd\" /"
">."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1470
msgid ""
"When running over a tunnel, authorization is primarily controlled by "
"operating system permissions to the repository's database files; it's very "
"much the same as if Harry were accessing the repository directly via a "
"<literal>file://</literal> URL.  If multiple system users are going to be "
"accessing the repository directly, you may want to place them into a common "
"group, and you'll need to be careful about umasks (be sure to read <xref "
"linkend=\"svn.serverconfig.multimethod\"/> later in this chapter).  But even "
"in the case of tunneling, you can still use the <filename>svnserve.conf</"
"filename> file to block access, by simply setting <literal>auth-access = "
"read</literal> or <literal>auth-access = none</literal>.<placeholder type="
"\"footnote\" id=\"0\"/>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para><footnote><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1497
msgid ""
"We don't actually recommend this, since RSH is notably less secure than SSH."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1492
msgid ""
"You'd think that the story of SSH tunneling would end here, but it doesn't.  "
"Subversion allows you to create custom tunnel behaviors in your runtime "
"<filename>config</filename> file (see <xref linkend=\"svn.advanced.confarea"
"\"/>).  For example, suppose you want to use RSH instead of SSH.<placeholder "
"type=\"footnote\" id=\"0\"/> In the <literal>[tunnels]</literal> section of "
"your <filename>config</filename> file, simply define it like this:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1505
#, no-wrap
msgid ""
"[tunnels]\n"
"rsh = rsh\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1510
msgid ""
"And now, you can use this new tunnel definition by using a URL scheme that "
"matches the name of your new variable: <literal>svn+rsh://host/path</"
"literal>.  When using the new URL scheme, the Subversion client will "
"actually be running the command <userinput>rsh host svnserve -t</userinput> "
"behind the scenes.  If you include a username in the URL (e.g., <literal>svn"
"+rsh://username@host/path</literal>), the client will also include that in "
"its command (<userinput>rsh username@host svnserve -t</userinput>).  But you "
"can define new tunneling schemes to be much more clever than that:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1523
#, no-wrap
msgid ""
"[tunnels]\n"
"joessh = $JOESSH /opt/alternate/ssh -p 29934\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1528
msgid ""
"This example demonstrates a couple of things.  First, it shows how to make "
"the Subversion client launch a very specific tunneling binary (the one "
"located at <filename>/opt/alternate/ssh</filename>) with specific options.  "
"In this case, accessing an <literal>svn+joessh://</literal> URL would invoke "
"the particular SSH binary with <option>-p 29934</option> as arguments&mdash;"
"useful if you want the tunnel program to connect to a nonstandard port."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1538
msgid ""
"Second, it shows how to define a custom environment variable that can "
"override the name of the tunneling program.  Setting the <literal>SVN_SSH</"
"literal> environment variable is a convenient way to override the default "
"SSH tunnel agent.  But if you need to have several different overrides for "
"different servers, each perhaps contacting a different port or passing a "
"different set of options to SSH, you can use the mechanism demonstrated in "
"this example.  Now if we were to set the <literal>JOESSH</literal> "
"environment variable, its value would override the entire value of the "
"tunnel variable&mdash;<command>$JOESSH</command> would be executed instead "
"of <userinput>/opt/alternate/ssh -p 29934</userinput>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1556
msgid "SSH Configuration Tricks"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1558
msgid ""
"It's possible to control not only the way in which the client invokes "
"<command>ssh</command>, but also to control the behavior of <command>sshd</"
"command> on your server machine.  In this section, we'll show how to control "
"the exact <command>svnserve</command> command executed by <command>sshd</"
"command>, as well as how to have multiple users share a single system "
"account."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1570
msgid ""
"To begin, locate the home directory of the account you'll be using to launch "
"<command>svnserve</command>.  Make sure the account has an SSH public/"
"private keypair installed, and that the user can log in via public-key "
"authentication.  Password authentication will not work, since all of the "
"following SSH tricks revolve around using the SSH <filename>authorized_keys</"
"filename> file."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1578
msgid ""
"If it doesn't already exist, create the <filename>authorized_keys</filename> "
"file (on Unix, typically <filename>~/.ssh/authorized_keys</filename>).  Each "
"line in this file describes a public key that is allowed to connect.  The "
"lines are typically of the form:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1587
#, no-wrap
msgid "  ssh-dsa AAAABtce9euch&hellip; user@example.com\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1591
msgid ""
"The first field describes the type of key, the second field is the base64-"
"encoded key itself, and the third field is a comment.  However, it's a "
"lesser known fact that the entire line can be preceded by a "
"<literal>command</literal> field:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1599
#, no-wrap
msgid "  command=\"program\" ssh-dsa AAAABtce9euch&hellip; user@example.com\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1603
msgid ""
"When the <literal>command</literal> field is set, the SSH daemon will run "
"the named program instead of the typical tunnel-mode <command>svnserve</"
"command> invocation that the Subversion client asks for.  This opens the "
"door to a number of server-side tricks.  In the following examples, we "
"abbreviate the lines of the file as:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1612
#, no-wrap
msgid "  command=\"program\" TYPE KEY COMMENT\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1620
msgid "Controlling the invoked command"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1622
msgid ""
"Because we can specify the executed server-side command, it's easy to name a "
"specific <command>svnserve</command> binary to run and to pass it extra "
"arguments:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1628
#, no-wrap
msgid "  command=\"/path/to/svnserve -t -r /virtual/root\" TYPE KEY COMMENT\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1632
msgid ""
"In this example, <filename>/path/to/svnserve</filename> might be a custom "
"wrapper script around <command>svnserve</command> which sets the umask (see "
"<xref linkend=\"svn.serverconfig.multimethod\"/>).  It also shows how to "
"anchor <command>svnserve</command> in a virtual root directory, just as one "
"often does when running <command>svnserve</command> as a daemon process.  "
"This might be done either to restrict access to parts of the system, or "
"simply to relieve the user of having to type an absolute path in the "
"<literal>svn+ssh://</literal> URL."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1644
msgid ""
"It's also possible to have multiple users share a single account.  Instead "
"of creating a separate system account for each user, generate a public/"
"private key pair for each person.  Then place each public key into the "
"<filename>authorized_keys</filename> file, one per line, and use the "
"<option>--tunnel-user</option> option:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1654
#, no-wrap
msgid ""
"  command=\"svnserve -t --tunnel-user=harry\" TYPE1 KEY1 harry@example.com\n"
"  command=\"svnserve -t --tunnel-user=sally\" TYPE2 KEY2 sally@example.com\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1659
msgid ""
"This example allows both Harry and Sally to connect to the same account via "
"public key authentication.  Each of them has a custom command that will be "
"executed; the <option>--tunnel-user</option> option tells <command>svnserve</"
"command> to assume that the named argument is the authenticated user.  "
"Without <option>--tunnel-user</option>, it would appear as though all "
"commits were coming from the one shared system account."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1669
msgid ""
"A final word of caution: giving a user access to the server via public-key "
"in a shared account might still allow other forms of SSH access, even if "
"you've set the <literal>command</literal> value in "
"<filename>authorized_keys</filename>.  For example, the user may still get "
"shell access through SSH or be able to perform X11 or general port "
"forwarding through your server.  To give the user as little permission as "
"possible, you may want to specify a number of restrictive options "
"immediately after the <literal>command</literal>:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1682
#, no-wrap
msgid ""
"  command=\"svnserve -t --tunnel-user=harry\",no-port-forwarding,no-agent-forw\n"
"arding,no-X11-forwarding,no-pty TYPE1 KEY1 harry@example.com\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1687
msgid ""
"Note that this all must be on one line&mdash;truly on one line&mdash;since "
"SSH <filename>authorized_keys</filename> files do not even allow the "
"conventional backslash character (<literal>\\</literal>) for line "
"continuation.  The only reason we've shown it with a line break is to fit it "
"on the physical page of a book."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1699
msgid "svnserve Configuration Reference"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1701
msgid ""
"In the previous sections, we've mentioned numerous configuration options "
"that administrators can use in their <filename>svnserve.conf</filename> "
"files to configure the behavior of Subversion as accessed via Subversion's "
"<command>svnserve</command> server option.  In this section, we'll quickly "
"summarize <emphasis>all</emphasis> the configuration options supported by "
"this server."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1709
msgid ""
"The <filename>svnserve.conf</filename> configuration file uses a typical INI-"
"style format, with name/value pairs of options grouped into named sections.  "
"(This is conveniently the same format used by Subversion's runtime "
"configuration area on the client side of the network.)  We'll describe "
"herein each of those named sections and the options available for use within "
"them."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1717
msgid ""
"By default, <command>svnserve</command> will consult per-repository "
"configuration files located at <filename>conf/svnserve.conf</filename> "
"within the physical directory structure of the repository.  To instead use a "
"single configuration file whose values apply to all repositories served via "
"an instance of <command>svnserve</command>, use the <option>--config-file</"
"option> option when starting your server."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><note><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1728
msgid ""
"In the following sections, we will refer to the <command>svnserve</command> "
"configuration file by its canonical name, <filename>svnserve.conf</"
"filename>.  The filename of actual configuration file used by your "
"<command>svnserve</command> instance might be something else, though.  We "
"trust this won't be too confusing."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1738
msgid "General configuration"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1740
msgid ""
"The <literal>[general]</literal> section contains the most commonly used and "
"broadly focused <command>svnserve</command> configuration options."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1748
msgid "<literal>anon-access</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1751
msgid ""
"Controls the access level granted to unauthenticated (anonymous) users.  "
"Valid values are <literal>write</literal>, <literal>read</literal>, and "
"<literal>none</literal>, with <literal>read</literal> being the default "
"value."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1761
msgid "<literal>auth-access</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1764
msgid ""
"Controls the access level granted to authenticaed users.  Valid values are "
"<literal>write</literal>, <literal>read</literal>, and <literal>none</"
"literal>, with <literal>write</literal> being the default value."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1774
msgid "<literal>authz-db</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1777
msgid ""
"Specifies the location of the repository access file as described in <xref "
"linkend=\"svn.serverconfig.pathbasedauthz.getting-started\" />.  If a "
"regular local path is used, then unless that path begins with a forward-"
"slash character (<literal>/</literal>), it is interpreted as a path relative "
"to the directory containing the <filename>svnserve.conf</filename> "
"configuration file.  If no path is specified, path-based access control will "
"be disabled."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1788
msgid ""
"As a special consideration, you may also specify the location of an access "
"file which is versioned inside a Subversion repository.  Use a local URL "
"(one which begins with <literal>file://</literal>) to refer to an absolute "
"Subversion-versioned access file.  Alternatively, use a repository relative "
"URL (one which begins with <literal>^/</literal>) to cause "
"<command>svnserve</command> to consult for each repository the access file "
"stored at the specified relative URL within that repository."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1803
msgid "<literal>force-username-case</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1806
msgid ""
"Specifies the case normalization applied to usernames before comparing them "
"against the rules found in the access file (specified by the <literal>authz-"
"db</literal> option).  Valid values are <literal>upper</literal> (to "
"uppercase the usernames), <literal>lower</literal> (to lowercase the "
"usernames), and <literal>none</literal> (to perform no normalization at "
"all).  By default, <command>svnserve</command> will not perform any case "
"normalization on usernames."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1821
msgid "<literal>groups-db</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1824
msgid ""
"Specifies the path of the groups file.  If a regular local path is used, "
"then unless that path begins with a forward-slash character (<literal>/</"
"literal>), it is interpreted as a path relative to the directory containing "
"the <filename>svnserve.conf</filename> configuration file."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1832
msgid ""
"You may also specify the location of a groups file which is versioned inside "
"a Subversion repository.  Use a local URL (one which begins with "
"<literal>file://</literal>) to refer to an absolute Subversion-versioned "
"file.  Alternatively, use a repository relative URL (one which begins with "
"<literal>^/</literal>) to cause <command>svnserve</command> to consult for "
"each repository the group file stored at the specified relative URL within "
"that repository."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1847
msgid "<literal>hooks-env</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1850
msgid ""
"Specifies the path to the hook script environment configuration file.  This "
"option overrides the per-repository default location for this file, and can "
"be used to configure the hook script environment for multiple repositories "
"in a single file if an absolute path is specified.  Unless you specify an "
"absolute path, the file's location is interpreted as relative to the "
"directory containing the <filename>svnserve.conf</filename> configuration "
"file."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1861
msgid ""
"You may also specify the location of a groups file which is versioned inside "
"a Subversion repository.  Use a local URL (one which begins with "
"<literal>file://</literal>) to refer to an absolute Subversion-versioned "
"file.  Alternatively, you may use a repository relative URL (one which "
"begins with <literal>^/</literal>) to cause <command>svnserve</command> to "
"consult for each repository the group file stored at the specified relative "
"URL within that repository."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1872
msgid ""
"See <xref linkend=\"svn.reposadmin.hooks.configuration\" /> for detailed "
"information regarding the hook script environment configuration file."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1881
msgid "<literal>password-db</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1884
msgid ""
"Specifies the path of the password database file.  Unless the path specified "
"begins with a forward-slash character (<literal>/</literal>), it is "
"interpreted as a path relative to the directory containing the "
"<filename>svnserve.conf</filename> configuration file.  Note that if the "
"SASL feature is used, this option will be ignored."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1896
msgid "<literal>realm</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1899
msgid ""
"Specifies the authentication realm of the repository.  This is primarily "
"used by the client to associate cached authentication credentials with a "
"specific repository or set of repositories.  As such, it is best that the "
"specified realm be unique across your repositories unless those repositories "
"share the same password database.  By default, the repository's UUID is used "
"as its authentication realm."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1915
msgid "Cyrus SASL configuration"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1917
msgid ""
"The <literal>[sasl]</literal> section contains configuration which is "
"specific to the optional Cyrus Simple Authentication and Security Layer "
"(SASL) integration feature of <command>svnserve</command>.  See <xref "
"linkend=\"svn.serverconfig.svnserve.sasl\"/> for a more thorough description "
"of this feature and the benefits it provides."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1928
msgid "<literal>max-encryption</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1931
msgid ""
"Specifies&mdash;as an integer bit-width&mdash;the maximum desired strength "
"of the security layer's encryption algorithm.  The special value <literal>0</"
"literal> means \"no encryption\", and the special value <literal>1</literal> "
"means \"integrity checking only\".  The default value for this option is "
"<literal>256</literal> (256-bit encryption)."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1944
msgid "<literal>min-encryption</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1947
msgid ""
"Specifies&mdash;as an integer bit-width&mdash;the minimum desired strength "
"of the security layer's encryption algorithm.  The special value <literal>0</"
"literal> means \"no encryption\", and the special value <literal>1</literal> "
"means \"integrity checking only\".  The default value for this option is "
"<literal>0</literal> (no encryption)."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1959
msgid "<literal>use-sasl</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1962
msgid ""
"Specifies (as a <literal>true</literal> or <literal>false</literal> value) "
"whether to enable the Cyrus SASL feature.  Note that this feature is only "
"available if <command>svnserve</command> was built with support for the "
"feature.  This feature is disabled by default."
msgstr ""

#. type: Content of: <chapter><sect1><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1983
msgid "httpd, the Apache HTTP Server"
msgstr ""

#. type: Content of: <chapter><sect1><para><footnote><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1988
msgid "See <ulink url=\"http://www.webdav.org/\"/>."
msgstr ""

#. type: Content of: <chapter><sect1><para><footnote><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1997
msgid "They really hate doing that."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:1985
msgid ""
"The Apache HTTP Server is a <quote>heavy-duty</quote> network server that "
"Subversion can leverage.  Via a custom module, <command>httpd</command> "
"makes Subversion repositories available to clients via the WebDAV/"
"DeltaV<placeholder type=\"footnote\" id=\"0\"/> protocol, which is an "
"extension to HTTP 1.1.  This protocol takes the ubiquitous HTTP protocol "
"that is the core of the World Wide Web, and adds writing&mdash;specifically, "
"versioned writing&mdash;capabilities.  The result is a standardized, robust "
"system that is conveniently packaged as part of the Apache 2.0 software, "
"supported by numerous operating systems and third-party products, and "
"doesn't require network administrators to open up yet another custom port."
"<placeholder type=\"footnote\" id=\"1\"/> While an Apache-Subversion server "
"has more features than <command>svnserve</command>, it's also a bit more "
"difficult to set up.  With flexibility often comes more complexity."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2003
msgid ""
"Much of the following discussion includes references to Apache configuration "
"directives.  While some examples are given of the use of these directives, "
"describing them in full is outside the scope of this chapter.  The Apache "
"team maintains excellent documentation, publicly available on their web site "
"at <ulink url=\"http://httpd.apache.org\"/>.  For example, a general "
"reference for the configuration directives is located at <ulink url=\"http://"
"httpd.apache.org/docs/current/mod/directives.html\" />."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2013
msgid ""
"Also, as you make changes to your Apache setup, it is likely that somewhere "
"along the way a mistake will be made.  If you are not already familiar with "
"Apache's logging subsystem, you should become aware of it.  In your "
"<filename>httpd.conf</filename> file are directives that specify the on-disk "
"locations of the access and error logs generated by Apache (the "
"<literal>CustomLog</literal> and <literal>ErrorLog</literal> directives, "
"respectively).  Subversion's <command>mod_dav_svn</command> uses Apache's "
"error logging interface as well.  You can always browse the contents of "
"those files for information that might reveal the source of a problem that "
"is not clearly noticeable otherwise."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2028
msgid "Prerequisites"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2030
msgid ""
"To network your repository over HTTP, you basically need four components, "
"available in two packages.  You'll need Apache <command>httpd</command> 2.0 "
"or newer, the <command>mod_dav</command> DAV module that comes with it, "
"Subversion, and the <command>mod_dav_svn</command> filesystem provider "
"module distributed with Subversion.  Once you have all of those components, "
"the process of networking your repository is as simple as:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2041
msgid "Getting httpd up and running with the <command>mod_dav</command> module"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2045
msgid ""
"Installing the <command>mod_dav_svn</command> backend to <command>mod_dav</"
"command>, which uses Subversion's libraries to access the repository"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2050
msgid ""
"Configuring your <filename>httpd.conf</filename> file to export (or expose) "
"the repository"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2055
msgid ""
"You can accomplish the first two items either by compiling <command>httpd</"
"command> and Subversion from source code or by installing prebuilt binary "
"packages of them on your system.  For the most up-to-date information on how "
"to compile Subversion for use with the Apache HTTP Server, as well as how to "
"compile and configure Apache itself for this purpose, see the "
"<filename>INSTALL</filename> file in the top level of the Subversion source "
"code tree."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2068
msgid "Basic Apache Configuration"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2070
msgid ""
"Once you have all the necessary components installed on your system, all "
"that remains is the configuration of Apache via its <filename>httpd.conf</"
"filename> file.  Instruct Apache to load the <command>mod_dav_svn</command> "
"module using the <literal>LoadModule</literal> directive.  This directive "
"must precede any other Subversion-related configuration items.  If your "
"Apache was installed using the default layout, your <command>mod_dav_svn</"
"command> module should have been installed in the <filename>modules</"
"filename> subdirectory of the Apache install location (often <filename>/usr/"
"local/apache2</filename>).  The <literal>LoadModule</literal> directive has "
"a simple syntax, mapping a named module to the location of a shared library "
"on disk:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2087
#, no-wrap
msgid "LoadModule dav_svn_module     modules/mod_dav_svn.so\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2091
msgid ""
"Apache interprets the <literal>LoadModule</literal> configuration item's "
"library path as relative to its own server root.  If configured as "
"previously shown, Apache will look for the Subversion DAV module shared "
"library in its own <filename>modules/</filename> subdirectory.  Depending on "
"how Subversion was installed on your system, you might need to specify a "
"different path for this library altogether, perhaps even an absolute path "
"such as in the following example:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2102
#, no-wrap
msgid "LoadModule dav_svn_module     C:/Subversion/lib/mod_dav_svn.so\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2106
msgid ""
"Note that if <command>mod_dav</command> was compiled as a shared object "
"(instead of statically linked directly to the <command>httpd</command> "
"binary), you'll need a similar <literal>LoadModule</literal> statement for "
"it, too.  Be sure that it comes before the <command>mod_dav_svn</command> "
"line:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2114
#, no-wrap
msgid ""
"LoadModule dav_module         modules/mod_dav.so\n"
"LoadModule dav_svn_module     modules/mod_dav_svn.so\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2119
msgid ""
"At a later location in your configuration file, you now need to tell Apache "
"where you keep your Subversion repository (or repositories).  The "
"<literal>Location</literal> directive has an XML-like notation, starting "
"with an opening tag and ending with a closing tag, with various other "
"configuration directives in the middle.  The purpose of the "
"<literal>Location</literal> directive is to instruct Apache to do something "
"special when handling requests that are directed at a given URL or one of "
"its children.  In the case of Subversion, you want Apache to simply hand off "
"support for URLs that point at versioned resources to the DAV layer.  You "
"can instruct Apache to delegate the handling of all URLs whose path portions "
"(the part of the URL that follows the server's name and the optional port "
"number) begin with <filename>/repos/</filename> to a DAV provider whose "
"repository is located at <filename>/var/svn/repository</filename> using the "
"following <filename>httpd.conf</filename> syntax:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2140
#, no-wrap
msgid ""
"&lt;Location /repos&gt;\n"
"  DAV svn\n"
"  SVNPath /var/svn/repository\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2147
msgid ""
"If you plan to support multiple Subversion repositories that will reside in "
"the same parent directory on your local disk, you can use an alternative "
"directive&mdash;<literal>SVNParentPath</literal>&mdash;to indicate that "
"common parent directory.  For example, if you know you will be creating "
"multiple Subversion repositories in a directory <filename>/var/svn</"
"filename> that would be accessed via URLs such as <uri>http://my.server.com/"
"svn/repos1</uri>, <uri>http://my.server.com/svn/repos2</uri>, and so on, you "
"could use the <filename>httpd.conf</filename> configuration syntax in the "
"following example:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2162
#, no-wrap
msgid ""
"&lt;Location /svn&gt;\n"
"  DAV svn\n"
"\n"
"  # Automatically map any \"/svn/foo\" URL to repository /var/svn/foo\n"
"  SVNParentPath /var/svn\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2171
msgid ""
"Using this syntax, Apache will delegate the handling of all URLs whose path "
"portions begin with <filename>/svn/</filename> to the Subversion DAV "
"provider, which will then assume that any items in the directory specified "
"by the <literal>SVNParentPath</literal> directive are actually Subversion "
"repositories.  This is a particularly convenient syntax in that, unlike the "
"use of the <literal>SVNPath</literal> directive, you don't have to restart "
"Apache to add or remove hosted repositories."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2181
msgid ""
"Be sure that when you define your new <literal>Location</literal>, it "
"doesn't overlap with other exported locations.  For example, if your main "
"<literal>DocumentRoot</literal> is exported to <filename>/www</filename>, do "
"not export a Subversion repository in <literal>&lt;Location /www/repos&gt;</"
"literal>.  If a request comes in for the URI <filename>/www/repos/foo.c</"
"filename>, Apache won't know whether to look for a file <filename>repos/foo."
"c</filename> in the <literal>DocumentRoot</literal>, or whether to delegate "
"<command>mod_dav_svn</command> to return <filename>foo.c</filename> from the "
"Subversion repository.  The result is often an error from the server of the "
"form <literal>301 Moved Permanently</literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sidebar><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2197
msgid "Server Names and the COPY Request"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sidebar><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2199
msgid ""
"Subversion makes use of the <literal>COPY</literal> request type to perform "
"server-side copies of files and directories.  As part of the sanity checking "
"done by the Apache modules, the source of the copy is expected to be located "
"on the same machine as the destination of the copy.  To satisfy this "
"requirement, you might need to tell <command>mod_dav</command> the name you "
"use as the hostname of your server.  Generally, you can use the "
"<literal>ServerName</literal> directive in <filename>httpd.conf</filename> "
"to accomplish this."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sidebar><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2212
#, no-wrap
msgid "ServerName svn.example.com\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sidebar><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2216
msgid ""
"If you are using Apache's virtual hosting support via the "
"<literal>NameVirtualHost</literal> directive, you may need to use the "
"<literal>ServerAlias</literal> directive to specify additional names by "
"which your server is known.  Again, refer to the Apache documentation for "
"full details."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2224
msgid ""
"At this stage, you should strongly consider the question of permissions.  If "
"you've been running Apache for some time now as your regular web server, you "
"probably already have a collection of content&mdash;web pages, scripts, and "
"such.  These items have already been configured with a set of permissions "
"that allows them to work with Apache, or more appropriately, that allows "
"Apache to work with those files.  Apache, when used as a Subversion server, "
"will also need the correct permissions to read and write to your Subversion "
"repository."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2235
msgid ""
"You will need to determine a permission system setup that satisfies "
"Subversion's requirements without messing up any previously existing web "
"page or script installations.  This might mean changing the permissions on "
"your Subversion repository to match those in use by other things that Apache "
"serves for you, or it could mean using the <literal>User</literal> and "
"<literal>Group</literal> directives in <filename>httpd.conf</filename> to "
"specify that Apache should run as the user and group that owns your "
"Subversion repository.  There is no single correct way to set up your "
"permissions, and each administrator will have different reasons for doing "
"things a certain way.  Just be aware that permission-related problems are "
"perhaps the most common oversight when configuring a Subversion repository "
"for use with Apache."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2255
msgid "Authentication Options"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2257
msgid ""
"At this point, if you configured <filename>httpd.conf</filename> to contain "
"something such as the following:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2263
#, no-wrap
msgid ""
"&lt;Location /svn&gt;\n"
"  DAV svn\n"
"  SVNParentPath /var/svn\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2270
msgid ""
"your repository is <quote>anonymously</quote> accessible to the world.  "
"Until you configure some authentication and authorization policies, the "
"Subversion repositories that you make available via the <literal>Location</"
"literal> directive will be generally accessible to everyone.  In other words:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2279
msgid ""
"Anyone can use a Subversion client to check out a working copy of a "
"repository URL (or any of its subdirectories)."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2284
msgid ""
"Anyone can interactively browse the repository's latest revision simply by "
"pointing a web browser to the repository URL."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2289
msgid "Anyone can commit to the repository."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2293
msgid ""
"Of course, you might have already set up a <filename>pre-commit</filename> "
"hook script to prevent commits (see <xref linkend=\"svn.reposadmin.hooks\" /"
">).  But as you read on, you'll see that it's also possible to use Apache's "
"built-in methods to restrict access in specific ways."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><tip><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2301
msgid ""
"Requiring authentication defends against invalid users directly accessing "
"the repository, but does not guard the privacy of valid users' network "
"activity.  See <xref linkend=\"svn.serverconfig.httpd.ssl\"/> for how to "
"configure your server to support SSL encryption, which can provide that "
"extra layer of protection."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2311
msgid "Basic authentication"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><footnote><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2316
msgid ""
"See <ulink url=\"http://httpd.apache.org/docs/current/programs/htpasswd.html"
"\" />."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2313
msgid ""
"The easiest way to authenticate a client is via the HTTP Basic "
"authentication mechanism, which simply uses a username and password to "
"verify a user's identity.  Apache provides the <command>htpasswd</command> "
"utility<placeholder type=\"footnote\" id=\"0\"/> for managing files "
"containing usernames and passwords."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><warning><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2322
msgid ""
"Basic authentication is <emphasis>extremely</emphasis> insecure, because it "
"sends passwords over the network in very nearly plain text.  See <xref "
"linkend=\"svn.serverconfig.httpd.authn.digest\"/> for details on using the "
"much safer Digest mechanism."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2329
msgid ""
"First, create a password file and grant access to users Harry and Sally:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2334
#, no-wrap
msgid ""
"$ ### First time: use -c to create the file\n"
"$ ### Use -m to use MD5 encryption of the password, which is more secure\n"
"$ htpasswd -c -m /etc/svn-auth.htpasswd harry\n"
"New password: *****\n"
"Re-type new password: *****\n"
"Adding password for user harry\n"
"$ htpasswd -m /etc/svn-auth.htpasswd sally\n"
"New password: *******\n"
"Re-type new password: *******\n"
"Adding password for user sally\n"
"$\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2348
msgid ""
"Next, ensure that Apache has access to the modules which provide the Basic "
"authentication and related functionality: <literal>mod_auth_basic</literal>, "
"<literal>mod_authn_file</literal>, and <literal>mod_authz_user</literal>.  "
"In many cases, these modules are compiled into <command>httpd</command> "
"itself, but if not, you might need to explicitly load one or more of them "
"using the <literal>LoadModule</literal> directive:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2359
#, no-wrap
msgid ""
"LoadModule auth_basic_module   modules/mod_auth_basic.so\n"
"LoadModule authn_file_module   modules/mod_authn_file.so\n"
"LoadModule authz_user_module   moduels/mod_authz_user.so\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2365
msgid ""
"After ensuring the Apache has access to the required functionality, you'll "
"need to add some more directives inside the <literal>&lt;Location&gt;</"
"literal> block to tell Apache what type of authentication you wish to use, "
"and just how to do so:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2373
#, no-wrap
msgid ""
"&lt;Location /svn&gt;\n"
"  DAV svn\n"
"  SVNParentPath /var/svn\n"
"\n"
"  # Authentication: Basic\n"
"  AuthName \"Subversion repository\"\n"
"  AuthType Basic\n"
"  AuthBasicProvider file\n"
"  AuthUserFile /etc/svn-auth.htpasswd\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2386
msgid "These directives work as follows:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2390
msgid ""
"<literal>AuthName</literal> is an arbitrary name that you choose for the "
"authentication domain.  Most browsers display this name in the dialog box "
"when prompting for username and password."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2396
msgid ""
"<literal>AuthType</literal> specifies the type of authentication to use."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2400
msgid ""
"<literal>AuthBasicProvider</literal> specifies the Basic authentication "
"provider to use for the location.  In our example, we wish to consult a "
"local password file."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2406
msgid ""
"<literal>AuthUserFile</literal> specifies the location of the password file "
"to use."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2411
msgid ""
"However, this <literal>&lt;Location&gt;</literal> block doesn't yet do "
"anything useful.  It merely tells Apache that <emphasis>if</emphasis> "
"authorization were required, it should challenge the Subversion client for a "
"username and password.  (When authorization is required, Apache requires "
"authentication as well.)  What's missing here, however, are directives that "
"tell Apache <emphasis>which sorts</emphasis> of client requests require "
"authorization; currently, none do.  The simplest thing is to specify that "
"<emphasis>all</emphasis> requests require authorization by adding "
"<literal>Require valid-user</literal> to the block:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2425
#, no-wrap
msgid ""
"&lt;Location /svn&gt;\n"
"  DAV svn\n"
"  SVNParentPath /var/svn\n"
"\n"
"  # Authentication: Basic\n"
"  AuthName \"Subversion repository\"\n"
"  AuthType Basic\n"
"  AuthBasicProvider file\n"
"  AuthUserFile /etc/svn-auth.htpasswd\n"
"\n"
"  # Authorization: Authenticated users only\n"
"  Require valid-user\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2441
msgid ""
"Refer to <xref linkend=\"svn.serverconfig.httpd.authz\"/> for more detail on "
"the <literal>Require</literal> directive and other ways to set authorization "
"policies."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><note><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2446
msgid ""
"The default value of the <literal>AuthBasicProvider</literal> option is "
"<literal>file</literal>, so we won't bother including it in future "
"examples.  Just know that if in a broader context you've set this value to "
"something else, you'll need to explicitly reset it to <literal>file</"
"literal> within your Subversion <literal>&lt;Location&gt;</literal> block in "
"order to get that behavior."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2460
msgid "Digest authentication"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2462
msgid ""
"Digest authentication is an improvement on Basic authentication which allows "
"the server to verify a client's identity without sending the password over "
"the network unprotected.  Both client and server create a non-reversible MD5 "
"hash of the username, password, requested URI, and a <firstterm>nonce</"
"firstterm> (number used once) provided by the server and changed each time "
"authentication is required.  The client sends its hash to the server, and "
"the server then verifies that the hashes match."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2472
msgid ""
"Configuring Apache to use Digest authentication is straightforward.  You'll "
"need to ensure that the <literal>mod_auth_digest</literal> module is "
"available (instead of <literal>mod_auth_basic</literal>), and then make a "
"few small variations on our prior example:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2480
#, no-wrap
msgid ""
"&lt;Location /svn&gt;\n"
"  DAV svn\n"
"  SVNParentPath /var/svn\n"
"\n"
"  # Authentication: Digest\n"
"  AuthName \"Subversion repository\"\n"
"  AuthType Digest\n"
"  AuthDigestProvider file\n"
"  AuthUserFile /etc/svn-auth.htdigest\n"
"\n"
"  # Authorization: Authenticated users only\n"
"  Require valid-user\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><footnote><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2501
msgid ""
"See <ulink url=\"http://httpd.apache.org/docs/current/programs/htdigest.html"
"\" />."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2496
msgid ""
"Notice that <literal>AuthType</literal> is now set to <literal>Digest</"
"literal>, and we specify a different path for <literal>AuthUserFile</"
"literal>.  Digest authentication uses a different file format than Basic "
"authentication, created and managed using Apache's <command>htdigest</"
"command> utility<placeholder type=\"footnote\" id=\"0\"/> rather than "
"<command>htpasswd</command>.  Digest authentication also has the additional "
"concept of a <quote>realm</quote>, which must match the value of the "
"<literal>AuthName</literal> directive."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><note><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2509
msgid ""
"For digest authentication, the authentication provider is selected using the "
"<literal>AuthDigestProvider</literal> as shown in the previous example.  As "
"was the case with the <literal>AuthBasicProvider</literal> directive, "
"<literal>file</literal> is the default value of the "
"<literal>AuthDigestProvider</literal> option, so this line is not strictly "
"required unless you need to override a different value thereof inherited "
"from a broader configuration context."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2520
msgid "The password file can be created as follows:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2524
#, no-wrap
msgid ""
"$ ### First time: use -c to create the file\n"
"$ htdigest -c /etc/svn-auth.htdigest \"Subversion repository\" harry\n"
"Adding password for harry in realm Subversion repository.\n"
"New password: *****\n"
"Re-type new password: *****\n"
"$ htdigest /etc/svn-auth.htdigest \"Subversion repository\" sally\n"
"Adding user sally in realm Subversion repository\n"
"New password: *******\n"
"Re-type new password: *******\n"
"$\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2543
msgid "Authorization Options"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2545
msgid ""
"At this point, you've configured authentication, but not authorization.  "
"Apache is able to challenge clients and confirm identities, but it has not "
"been told how to allow or restrict access to the clients bearing those "
"identities.  This section describes two strategies for controlling access to "
"your repositories."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2554
msgid "Blanket access control"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2556
msgid ""
"The simplest form of access control is to authorize certain users for either "
"read-only access to a repository or read/write access to a repository."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2560
msgid ""
"You can restrict access on all repository operations by adding "
"<literal>Require valid-user</literal> directly inside the <literal>&lt;"
"Location&gt;</literal> block.  The example from <xref linkend=\"svn."
"serverconfig.httpd.authn.digest\"/> allows only clients that successfully "
"authenticate to do anything with the Subversion repository:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2569
#, no-wrap
msgid ""
"&lt;Location /svn&gt;\n"
"  DAV svn\n"
"  SVNParentPath /var/svn\n"
"\n"
"  # Authentication: Digest\n"
"  AuthName \"Subversion repository\"\n"
"  AuthType Digest\n"
"  AuthUserFile /etc/svn-auth.htdigest\n"
"\n"
"  # Authorization: Authenticated users only\n"
"  Require valid-user\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2584
msgid ""
"Sometimes you don't need to run such a tight ship.  For example, the server "
"hosting Subversion's own source code at <ulink url=\"https://svn.apache.org/"
"repos/asf/subversion/\"/> allows anyone in the world to perform read-only "
"repository tasks (such as checking out working copies and browsing the "
"repository), but restricts write operations to authenticated users.  The "
"<literal>Limit</literal> and <literal>LimitExcept</literal> directives allow "
"for this type of selective restriction.  Like the <literal>Location</"
"literal> directive, these blocks have starting and ending tags, and you "
"would nest them inside your <literal>&lt;Location&gt;</literal> block."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2597
msgid ""
"The parameters present on the <literal>Limit</literal> and "
"<literal>LimitExcept</literal> directives are HTTP request types that are "
"affected by that block.  For example, to allow anonymous read-only "
"operations, you would use the <literal>LimitExcept</literal> directive "
"(passing the <literal>GET</literal>, <literal>PROPFIND</literal>, "
"<literal>OPTIONS</literal>, and <literal>REPORT</literal> request type "
"parameters) and place the previously mentioned <literal>Require valid-user</"
"literal> directive inside the <literal>&lt;LimitExcept&gt;</literal> block "
"instead of just inside the <literal>&lt;Location&gt;</literal> block."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2611
#, no-wrap
msgid ""
"&lt;Location /svn&gt;\n"
"  DAV svn\n"
"  SVNParentPath /var/svn\n"
"\n"
"  # Authentication: Digest\n"
"  AuthName \"Subversion repository\"\n"
"  AuthType Digest\n"
"  AuthUserFile /etc/svn-auth.htdigest\n"
"\n"
"  # Authorization: Authenticated users only for non-read-only\n"
"  #                (write) operations; allow anonymous reads\n"
"  &lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt;\n"
"    Require valid-user\n"
"  &lt;/LimitExcept&gt;\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2629
msgid ""
"These are only a few simple examples.  For more in-depth information about "
"Apache access control and the <literal>Require</literal> directive, take a "
"look at the <literal>Security</literal> section of the Apache "
"documentation's tutorials collection at <ulink url=\"http://httpd.apache.org/"
"docs-2.0/misc/tutorials.html\"/>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2640
msgid "Per-directory access control"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2642
msgid ""
"It's possible to set up finer-grained permissions using "
"<command>mod_authz_svn</command>.  This Apache module grabs the various "
"opaque URLs passing from client to server, asks <command>mod_dav_svn</"
"command> to decode them, and then possibly vetoes requests based on access "
"policies defined in a configuration file."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2649
msgid ""
"If you've built Subversion from source code, <command>mod_authz_svn</"
"command> is automatically built and installed alongside "
"<command>mod_dav_svn</command>.  Many binary distributions install it "
"automatically as well.  To verify that it's installed correctly, make sure "
"it comes right after <command>mod_dav_svn</command>'s <literal>LoadModule</"
"literal> directive in <filename>httpd.conf</filename>:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2660
#, no-wrap
msgid ""
"LoadModule dav_module         modules/mod_dav.so\n"
"LoadModule dav_svn_module     modules/mod_dav_svn.so\n"
"LoadModule authz_svn_module   modules/mod_authz_svn.so\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2666
msgid ""
"To activate this module, you need to configure your <literal>&lt;Location&gt;"
"</literal> block to use the <literal>AuthzSVNAccessFile</literal> directive "
"which specifies a single file containing the permissions policy for paths "
"within your repositories.  Beginning with Subversion 1.7, you can also use "
"<literal>AuthzSVNReposRelativeAccessFile</literal> directive to specify a "
"per repository access file.  (In a moment, we'll discuss the format of that "
"file.)"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2675
msgid ""
"Apache is flexible, so you have the option to configure your block in one of "
"three general patterns.  To begin, choose one of these basic configuration "
"patterns.  (The following examples are very simple; look at Apache's own "
"documentation for much more detail on Apache authentication and "
"authorization options.)"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2682
msgid ""
"The most open approach is to allow access to everyone.  This means Apache "
"never sends authentication challenges, and all users are treated as "
"<quote>anonymous</quote>.  (See <xref linkend=\"svn.serverconfig.httpd.authz."
"perdir.ex-1\" />.)"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2689
msgid "A sample configuration for anonymous access"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2691
#, no-wrap
msgid ""
"&lt;Location /repos&gt;\n"
"  DAV svn\n"
"  SVNParentPath /var/svn\n"
"\n"
"  # Authentication: None\n"
"\n"
"  # Authorization: Path-based access control\n"
"  AuthzSVNAccessFile /path/to/access/file\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2703
msgid ""
"On the opposite end of the paranoia scale, you can configure Apache to "
"authenticate all clients.  This block unconditionally requires "
"authentication via the <literal>Require valid-user</literal> directive, and "
"defines a means to authenticate valid users.  (See <xref linkend=\"svn."
"serverconfig.httpd.authz.perdir.ex-2\"/>.)"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2711
msgid "A sample configuration for authenticated access"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2713
#, no-wrap
msgid ""
"&lt;Location /repos&gt;\n"
"  DAV svn\n"
"  SVNParentPath /var/svn\n"
"\n"
"  # Authentication: Digest\n"
"  AuthName \"Subversion repository\"\n"
"  AuthType Digest\n"
"  AuthUserFile /etc/svn-auth.htdigest\n"
"\n"
"  # Authorization: Path-based access control; authenticated users only\n"
"  AuthzSVNAccessFile /path/to/access/file\n"
"  Require valid-user\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2729
msgid ""
"A third very popular pattern is to allow a combination of authenticated and "
"anonymous access.  For example, many administrators want to allow anonymous "
"users to read certain repository directories, but restrict access to more "
"sensitive areas to authenticated users.  In this setup, all users start out "
"accessing the repository anonymously.  If your access control policy demands "
"a real username at any point, Apache will demand authentication from the "
"client.  To do this, use both the <literal>Satisfy Any</literal> and "
"<literal>Require valid-user</literal> directives.  (See <xref linkend=\"svn."
"serverconfig.httpd.authz.perdir.ex-3\" />.)"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2743
msgid "A sample configuration for mixed authenticated/anonymous access"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2746
#, no-wrap
msgid ""
"&lt;Location /repos&gt;\n"
"  DAV svn\n"
"  SVNParentPath /var/svn\n"
"\n"
"  # Authentication: Digest\n"
"  AuthName \"Subversion repository\"\n"
"  AuthType Digest\n"
"  AuthUserFile /etc/svn-auth.htdigest\n"
"\n"
"  # Authorization: Path-based access control; try anonymous access\n"
"  #                first, but authenticate if necessary\n"
"  AuthzSVNAccessFile /path/to/access/file\n"
"  Satisfy Any\n"
"  Require valid-user\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2764
msgid ""
"The next step is to create the authorization file containing access rules "
"for particular paths within the repository.  We describe how later in this "
"chapter, in <xref linkend=\"svn.serverconfig.pathbasedauthz\"/>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2773
msgid "Disabling path-based checks"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2775
msgid ""
"The <command>mod_dav_svn</command> module goes through a lot of work to make "
"sure that data you've marked <quote>unreadable</quote> doesn't get "
"accidentally leaked.  This means it needs to closely monitor all of the "
"paths and file-contents returned by commands such as <command>svn checkout</"
"command> and <command>svn update</command>.  If these commands encounter a "
"path that isn't readable according to some authorization policy, the path is "
"typically omitted altogether.  In the case of history or rename "
"tracing&mdash;for example, running a command such as <userinput>svn cat -r "
"OLD foo.c</userinput> on a file that was renamed long ago&mdash;the rename "
"tracking will simply halt if one of the object's former names is determined "
"to be read-restricted."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2790
msgid ""
"All of this path checking can sometimes be quite expensive, especially in "
"the case of <command>svn log</command>.  When retrieving a list of "
"revisions, the server looks at every changed path in each revision and "
"checks it for readability.  If an unreadable path is discovered, it's "
"omitted from the list of the revision's changed paths (normally seen with "
"the <option>--verbose</option> (<option>-v</option>) option), and the whole "
"log message is suppressed.  Needless to say, this can be time-consuming on "
"revisions that affect a large number of files.  This is the cost of "
"security: even if you haven't configured a module such as "
"<command>mod_authz_svn</command> at all, the <command>mod_dav_svn</command> "
"module is still asking Apache <command>httpd</command> to run authorization "
"checks on every path.  The <command>mod_dav_svn</command> module has no idea "
"what authorization modules have been installed, so all it can do is ask "
"Apache to invoke whatever might be present."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2810
msgid ""
"On the other hand, there's also an escape hatch of sorts, which allows you "
"to trade security features for speed.  If you're not enforcing any sort of "
"per-directory authorization (i.e., not using <command>mod_authz_svn</"
"command> or similar module), you can disable all of this path checking.  In "
"your <filename>httpd.conf</filename> file, use the <literal>SVNPathAuthz</"
"literal> directive as shown in <xref linkend=\"svn.serverconfig.httpd.authz."
"pathauthzoff.ex-1\"/>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2821
msgid "Disabling path checks altogether"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2823
#, no-wrap
msgid ""
"&lt;Location /repos&gt;\n"
"  DAV svn\n"
"  SVNParentPath /var/svn\n"
"\n"
"  SVNPathAuthz off\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2832
msgid ""
"The <literal>SVNPathAuthz</literal> directive is <quote>on</quote> by "
"default.  When set to <quote>off,</quote> all path-based authorization "
"checking is disabled; <command>mod_dav_svn</command> stops invoking "
"authorization checks on every path it discovers."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2843
msgid "Versioned in repository access files"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2845
msgid ""
"Beginning with Subversion 1.8, access files can be stored inside a "
"Subversion repository.  It is possible to store the access file in the same "
"repository to which the access rules are being applied or another "
"repository.  This approach enables versioning features of Subversion for the "
"path-based authorization configuration."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2852
msgid ""
"Both <literal>AuthzSVNAccessFile</literal> and "
"<literal>AuthzSVNReposRelativeAccessFile</literal> configuration directives "
"allow to specify in-repository access file's location.  The directives "
"accept absolute <literal>file://</literal> URLs and repository relative URLs "
"(one which begins with ^/)."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2858
msgid ""
"For example, it is possible to specify an absolute URL to in-repository "
"access file as shown in <xref linkend=\"svn.serverconfig.httpd.authz.inrepo-"
"authz.ex-1\"/>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2863
msgid "Using single versioned in repo access file"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2865
#, no-wrap
msgid ""
"&lt;Location /repos&gt;\n"
"  DAV svn\n"
"  SVNParentPath /var/svn\n"
"  AuthzSVNAccessFile file:///var/svn/authzrepo/authz\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2873
msgid ""
"You can also specify a relative URL to an in repository access file as "
"demonstrated in <xref linkend=\"svn.serverconfig.httpd.authz.inrepo-authz."
"ex-2\"/>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2878
msgid "Using per repository in repo access files"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><example><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2880
#, no-wrap
msgid ""
"&lt;Location /repos&gt;\n"
"  DAV svn\n"
"  SVNParentPath /var/svn\n"
"  AuthzSVNReposRelativeAccessFile ^/authz\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2894
msgid "Protecting network traffic with SSL"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2896
msgid ""
"Connecting to a repository via <literal>http://</literal> means that all "
"Subversion activity is sent across the network in the clear.  This means "
"that actions such as checkouts, commits, and updates could potentially be "
"intercepted by an unauthorized party <quote>sniffing</quote> network "
"traffic.  Encrypting traffic using SSL is a good way to protect potentially "
"sensitive information over the network."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2904
msgid ""
"If a Subversion client is compiled to use OpenSSL, it gains the ability to "
"speak to an Apache server via <literal>https://</literal> URLs, so all "
"traffic is encrypted with a per-connection session key.  The WebDAV library "
"used by the Subversion client is not only able to verify server "
"certificates, but can also supply client certificates when challenged by the "
"server."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2914
msgid "Subversion server SSL certificate configuration"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2916
msgid ""
"It's beyond the scope of this book to describe how to generate client and "
"server SSL certificates and how to configure Apache to use them.  Many other "
"references, including Apache's own documentation (<ulink url=\"http://httpd."
"apache.org/docs/current/ssl/\"/>), describe the process."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><tip><para><footnote><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2928
msgid ""
"While self-signed certificates are still vulnerable to a <quote>man-in-the-"
"middle</quote> attack (before a client sees the certificate for the first "
"time), such an attack is much more difficult for a casual observer to pull "
"off, compared to sniffing unprotected passwords."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><tip><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2924
msgid ""
"SSL certificates from well-known entities generally cost money, but at a "
"bare minimum, you can configure Apache to use a self-signed certificate "
"generated with a tool such as OpenSSL (<ulink url=\"http://openssl.org\" />)."
"<placeholder type=\"footnote\" id=\"0\"/>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2940
msgid "Subversion client SSL certificate management"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2942
msgid ""
"When connecting to Apache via <literal>https://</literal>, a Subversion "
"client can receive two different types of responses:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2948
msgid "A server certificate"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2951
msgid "A challenge for a client certificate"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2956
msgid "Server certificate"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2958
msgid ""
"When the client receives a server certificate, it needs to verify that the "
"server is who it claims to be. OpenSSL does this by examining the signer of "
"the server certificate, or <firstterm>certificate authority</firstterm> "
"(CA).  If OpenSSL is unable to automatically trust the CA, or if some other "
"problem occurs (such as an expired certificate or hostname mismatch), the "
"Subversion command-line client will ask you whether you want to trust the "
"server certificate anyway:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2970
#, no-wrap
msgid ""
"$ svn list https://host.example.com/repos/project\n"
"\n"
"Error validating server certificate for 'https://host.example.com:443':\n"
" - The certificate is not issued by a trusted authority.  Use the\n"
"   fingerprint to validate the certificate manually!\n"
"Certificate information:\n"
" - Hostname: host.example.com\n"
" - Valid: from Jan 30 19:23:56 2004 GMT until Jan 30 19:23:56 2006 GMT\n"
" - Issuer: CA, example.com, Sometown, California, US\n"
" - Fingerprint: 7d:e1:a9:34:33:39:ba:6a:e9:a5:c4:22:98:7b:76:5c:92:a0:9c:7b\n"
"\n"
"(R)eject, accept (t)emporarily or accept (p)ermanently?\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2985
msgid ""
"This dialogue is essentially the same question you may have seen coming from "
"your web browser (which is just another HTTP client like Subversion).  If "
"you choose the <literal>(p)</literal>ermanent option, Subversion will cache "
"the server certificate in your private runtime <filename>auth/</filename> "
"area, just as your username and password are cached (see <xref linkend=\"svn."
"serverconfig.netmodel.credcache\"/>), and will automatically trust the "
"certificate in the future."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:2995
msgid ""
"Your runtime <filename>servers</filename> file also gives you the ability to "
"make your Subversion client automatically trust specific CAs, either "
"globally or on a per-host basis.  Simply set the <literal>ssl-authority-"
"files</literal> variable to a semicolon-separated list of PEM-encoded CA "
"certificates:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3004
#, no-wrap
msgid ""
"[global]\n"
"ssl-authority-files = /path/to/CAcert1.pem;/path/to/CAcert2.pem\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3009
msgid ""
"Many OpenSSL installations also have a predefined set of <quote>default</"
"quote> CAs that are nearly universally trusted.  To make the Subversion "
"client automatically trust these standard authorities, set the <literal>ssl-"
"trust-default-ca</literal> variable to <literal>true</literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3019
msgid "Client certificate challenge"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3021
msgid ""
"If the client receives a challenge for a certificate, the server is asking "
"the client to prove its identity.  The client must send back a certificate "
"signed by a CA that the server trusts, along with a <firstterm>challenge "
"response</firstterm> which proves that the client owns the private key "
"associated with the certificate.  The private key and certificate are "
"usually stored in an encrypted format on disk, protected by a passphrase.  "
"When Subversion receives this challenge, it will ask you for the path to the "
"encrypted file and the passphrase that protects it:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3034
#, no-wrap
msgid ""
"$ svn list https://host.example.com/repos/project\n"
"\n"
"Authentication realm: https://host.example.com:443\n"
"Client certificate filename: /path/to/my/cert.p12\n"
"Passphrase for '/path/to/my/cert.p12':  ********\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3042
msgid ""
"Notice that the client credentials are stored in a <literal>.p12</literal> "
"file.  To use a client certificate with Subversion, it must be in PKCS#12 "
"format, which is a portable standard.  Most web browsers are able to import "
"and export certificates in that format.  Another option is to use the "
"OpenSSL command-line tools to convert existing certificates into PKCS#12."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3050
msgid ""
"The runtime <filename>servers</filename> file also allows you to automate "
"this challenge on a per-host basis.  If you set the <literal>ssl-client-cert-"
"file</literal> and <literal>ssl-client-cert-password</literal> variables, "
"Subversion can automatically respond to a client certificate challenge "
"without prompting you:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3059
#, no-wrap
msgid ""
"[groups]\n"
"examplehost = host.example.com\n"
"\n"
"[examplehost]\n"
"ssl-client-cert-file = /path/to/my/cert.p12\n"
"ssl-client-cert-password = somepassword\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3068
msgid ""
"More security-conscious folk might want to exclude <literal>ssl-client-cert-"
"password</literal> to avoid storing the passphrase in the clear on disk."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3078
msgid "Tuning for Performance"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3080
msgid ""
"The Apache HTTP Server is built for performance, but you can improve upon "
"its default configuration to get even better results out of your Subversion "
"service offering.  In this section, we'll recommend some specific "
"configuration changes to consider.  Understand, however, that some of the "
"<filename>httpd.conf</filename> configuration options we'll be discussing "
"herein affect the general behavior of your server, not merely the Subversion "
"service.  As such, you need to consider the full breadth of your HTTP "
"service offering to discern how modifications to these settings for "
"Subversion's sake may affect your other services."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3094
msgid "KeepAlive"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3096
msgid ""
"By default, the Apache HTTP Server is configured to enable the re-use of a "
"single server connection for multiple requests.  That's very beneficial for "
"Subversion, because unlike many HTTP-based applications, Subversion can very "
"quickly generate hundreds or thousands of requests against the server for a "
"single operation, and the cost of opening a new connection to the server is "
"non-trivial.  Subversion wants to squeeze as many requests as possible out "
"of a single connection before that connection is terminated by the server.  "
"The <literal>KeepAlive</literal> directive is the boolean flag which enables "
"or disables this connection re-use facility, and as we indicated previously, "
"by default its value is <literal>On</literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3110
msgid ""
"But there's another directive which limits the number of requests a client "
"is allowed to submit on a single connection: the "
"<literal>MaxKeepAliveRequests</literal> directive.  The default value for "
"that option is <literal>100</literal>.  This was probably sufficient for "
"older versions of Subversion, but Subversion 1.8 employs a different HTTP "
"communications library (called Serf) which prefers to pipeline several "
"smaller requests for specific bits of information rather than asking the "
"server to transmit huge chunks of data in a single response.  We recommend "
"that you increase the value of the <literal>MaxKeepAliveRequests</literal> "
"option to at least <literal>1000</literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3126
#, no-wrap
msgid ""
"#\n"
"# KeepAlive: Whether or not to allow persistent connections (more than\n"
"# one request per connection). Set to \"Off\" to deactivate.\n"
"#\n"
"KeepAlive On\n"
"\n"
"#\n"
"# MaxKeepAliveRequests: The maximum number of requests to allow\n"
"# during a persistent connection. Set to 0 to allow an unlimited amount.\n"
"# We recommend you leave this number high, for maximum performance.\n"
"#\n"
"MaxKeepAliveRequests 1000\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3144
msgid "Bulk updates"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3146
msgid ""
"The biggest difference between the way that Subversion 1.8 clients and "
"pre-1.8 clients behave is in how update-style operations (<command>svn "
"checkout</command>, <command>svn update</command>, <command>svn switch</"
"command>, etc.) are handled.  Older clients which used the Neon HTTP library "
"for communications preferred to ask the server for the entire payload of "
"information required from the server in a single request.  Admins will have "
"noticed that in their server logs, there would be some initial handshaking "
"operations, and then a <literal>REPORT</literal> request with a massive "
"response.  That response was the entire checkout/update dataset!"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3159
msgid ""
"Subversion clients which use the Serf HTTP library&mdash;which includes all "
"clients built atop the Subversion 1.8&mdash;still send the <literal>REPORT</"
"literal> request, but with slightly different flags set inside that "
"request.  These flags ask the server not to send all the data for the "
"operation, but to instead send only a checklist of other more specific "
"things that the client needs to subsequently fetch from the server in order "
"to complete that operation.  In the server's <filename>access_log</"
"filename>, that <literal>REPORT</literal> is followed by many smaller "
"requests (<literal>GET</literal>s and, in older versions of Subversion, "
"<literal>PROPFIND</literal>s)."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3172
msgid ""
"There are pros and cons to each approach.  As we've mentioned, the so-called "
"bulk updates generate considerably less information in the server logs, but "
"a given Apache HTTP Server child process is completely consumed for the "
"duration of what could be a lengthy operation.  Non-bulk updates offer "
"opportunities for setting up content caches (which themselves can improve "
"performance), but generate server log traffic which is whole orders of "
"magnitude larger than the bulk update approach.  So, for one reason or "
"another, administrators may desire to exert a little more control over which "
"approach the clients use.  Subversion 1.6 introduced the "
"<literal>SVNAllowBulkUpdates</literal> <command>mod_dav_svn</command> "
"directive&mdash;a simple boolean flag&mdash;to allow admins to specify "
"whether the server was allowed to honor bulk update requests.  In Subversion "
"1.8, this directive has expanded to include a <literal>Prefer</literal> "
"value in addition to the <literal>On</literal> and <literal>Off</literal> "
"values it already supported. When <literal>SVNAllowBulkUpdates</literal> is "
"set to <literal>Prefer</literal>, supporting clients (1.8 or newer) will try "
"to use the bulk update approach unless otherwise configured."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3200
msgid "Extra Goodies"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3202
msgid ""
"We've covered most of the authentication and authorization options for "
"Apache and <command>mod_dav_svn</command>.  But there are a few other nice "
"features that Apache provides."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3209
msgid "Repository browsing"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3211
msgid ""
"One of the most useful benefits of an Apache/WebDAV configuration for your "
"Subversion repository is that your versioned files and directories are "
"immediately available for viewing via a regular web browser.  Since "
"Subversion uses URLs to identify versioned resources, those URLs used for "
"HTTP-based repository access can be typed directly into a web browser.  Your "
"browser will issue an HTTP <literal>GET</literal> request for that URL; "
"based on whether that URL represents a versioned directory or file, "
"<command>mod_dav_svn</command> will respond with a directory listing or with "
"file contents."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3224
msgid "URL syntax"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3226
msgid ""
"If the URLs do not contain any information about which version of the "
"resource you wish to see, <command>mod_dav_svn</command> will answer with "
"the youngest version.  This functionality has the wonderful side effect that "
"you can pass around Subversion URLs to your peers as references to "
"documents, and those URLs will always point at the latest manifestation of "
"that document.  Of course, you can even use the URLs as hyperlinks from "
"other web sites, too."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3236
msgid ""
"As of Subversion 1.6, <command>mod_dav_svn</command> supports a public URI "
"syntax for examining older revisions of both files and directories.  The "
"syntax uses the query string portion of the URL to specify either or both of "
"a peg revision and operative revision, which Subversion will then use to "
"determine which version of the file or directory to display to your web "
"browser.  Add the query string name/value pair "
"<literal>p=<replaceable>PEGREV</replaceable></literal>, where "
"<replaceable>PEGREV</replaceable> is a revision number, to specify the peg "
"revision you wish to apply to the request.  Use <literal>r=<replaceable>REV</"
"replaceable></literal>, where <replaceable>REV</replaceable> is a revision "
"number, to specify an operative revision."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3252
msgid ""
"For example, if you wish to see the latest version of a <filename>README."
"txt</filename> file located in your project's <filename>/trunk</filename>, "
"point your web browser to that file's repository URL, which might look "
"something like the following:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3260
#, no-wrap
msgid "http://host.example.com/repos/project/trunk/README.txt\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3264
msgid ""
"If you now wish to see some older version of that file, add an operative "
"revision to the URL's query string:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3270
#, no-wrap
msgid "http://host.example.com/repos/project/trunk/README.txt?r=1234\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3274
msgid ""
"What if the thing you're trying to view no longer exists in the youngest "
"revision of the repository? That's where a peg revision is handy:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3280
#, no-wrap
msgid "http://host.example.com/repos/project/trunk/deleted-thing.txt?p=321\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3284
msgid ""
"And of course, you can combine peg revision and operative revision "
"specifiers to fine-tune the exact item you wish to view:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3290
#, no-wrap
msgid "http://host.example.com/repos/project/trunk/renamed-thing.txt?p=123&amp;r=21\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3294
msgid ""
"The previous URL would display revision 21 of the object which, in revision "
"123, was located at <filename>/trunk/renamed-thing.txt</filename> in the "
"repository.  See <xref linkend=\"svn.advanced.pegrevs\" /> for a detailed "
"explanation of these <quote>peg revision</quote> and <quote>operative "
"revision</quote> concepts.  They can be a bit tricky to wrap your head "
"around."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3302
msgid ""
"Beginning with Subversion 1.8, <command>mod_dav_svn</command> has the "
"ability to substitute keywords.  When <command>mod_dav_svn</command> finds "
"the query argument <literal>kw=1</literal> added to the URL of a file, it "
"will expand keywords when delivering the file's content.  Omitting the "
"<literal>kw</literal> parameter or using any value besides <literal>1</"
"literal> for that parameter will cause Subversion to use its default "
"behavior, which is to deliver the file's content without any keywords "
"expanded."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3313
msgid ""
"Because keyword substitution is typically performed by the Subversion client "
"as part of its working copy administration and management, this is a handy "
"way to get the server to deliver a keyword-expanded form of your versioned "
"file without the use of a working copy."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3319
msgid ""
"For example, if you wish to see the latest version of a <filename>README."
"txt</filename> file located in your project's <filename>/trunk</filename> "
"with keywords expanded, add the query argument <literal>kw=1</literal> to "
"the URL:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3327
#, no-wrap
msgid "http://host.example.com/repos/project/trunk/README.txt?kw=1\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3331
msgid ""
"As with client-side keyword expansion, only those keywords which are "
"explicitly designated for expansion via the <literal>svn:keywords</literal> "
"property set on the file itself will be expanded.  See <xref linkend=\"svn."
"advanced.props.special.keywords\" /> for a detailed description of the "
"keyword substitution feature."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3338
msgid ""
"As a reminder, <command>mod_dav_svn</command> offers only a limited "
"repository browsing experience.  You can see directory listings and file "
"contents, but no revision properties (such as commit log messages) or file/"
"directory properties.  For folks who require more extensive browsing of "
"repositories and their history, there are several third-party software "
"packages which offer this.  Some examples include ViewVC (<ulink url="
"\"http://viewvc.org\" />), Trac (<ulink url=\"http://trac.edgewall.org\" />) "
"and WebSVN (<ulink url=\"http://websvn.info\" />).  These third-party tools "
"don't affect <command>mod_dav_svn</command>'s built-in <quote>browseability</"
"quote>, and generally offer a much wider set of features, including the "
"display of the aforementioned property sets, display of content differences "
"between file revisions, and so on."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3357
msgid "Proper MIME type"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3359
msgid ""
"When browsing a Subversion repository, the web browser gets a clue about how "
"to render a file's contents by looking at the <literal>Content-Type:</"
"literal> header returned in Apache's response to the HTTP <literal>GET</"
"literal> request.  The value of this header is some sort of MIME type.  By "
"default, Apache will tell the web browsers that all repository files are of "
"the <quote>default</quote> MIME type, typically <literal>text/plain</"
"literal>.  This can be frustrating, however, if a user wishes repository "
"files to render as something more meaningful&mdash;for example, it might be "
"nice to have a <filename>foo.html</filename> file in the repository actually "
"render as HTML when browsing."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3374
msgid ""
"To make this happen, you need only to make sure that your files have the "
"proper <literal>svn:mime-type</literal> set.  We discuss this in more detail "
"in <xref linkend=\"svn.advanced.props.special.mime-type\"/>, and you can "
"even configure your client to automatically attach proper <literal>svn:mime-"
"type</literal> properties to files entering the repository for the first "
"time; see <xref linkend=\"svn.advanced.props.auto\"/>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3383
msgid ""
"Continuing our example, if one were to set the <literal>svn:mime-type</"
"literal> property to <literal>text/html</literal> on file <filename>foo."
"html</filename>, Apache would properly tell your web browser to render the "
"file as HTML.  One could also attach proper <literal>image/*</literal> MIME-"
"type properties to image files and ultimately get an entire web site to be "
"viewable directly from a repository! There's generally no problem with this, "
"as long as the web site doesn't contain any dynamically generated content."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3398
msgid "Customizing the look"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3400
msgid ""
"You generally will get more use out of URLs to versioned files&mdash;after "
"all, that's where the interesting content tends to lie.  But you might have "
"occasion to browse a Subversion directory listing, where you'll quickly note "
"that the generated HTML used to display that listing is very basic, and "
"certainly not intended to be aesthetically pleasing (or even interesting).  "
"To enable customization of these directory displays, Subversion provides an "
"XML index feature.  A single <literal>SVNIndexXSLT</literal> directive in "
"your repository's <literal>Location</literal> block of <filename>httpd.conf</"
"filename> will instruct <command>mod_dav_svn</command> to generate XML "
"output when displaying a directory listing, and to reference the XSLT "
"stylesheet of your choice:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3418
#, no-wrap
msgid ""
"&lt;Location /svn&gt;\n"
"  DAV svn\n"
"  SVNParentPath /var/svn\n"
"  SVNIndexXSLT \"/svnindex.xsl\"\n"
"  &hellip;\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3427
msgid ""
"Using the <literal>SVNIndexXSLT</literal> directive and a creative XSLT "
"stylesheet, you can make your directory listings match the color schemes and "
"imagery used in other parts of your web site.  Or, if you'd prefer, you can "
"use the sample stylesheets provided in the Subversion source distribution's "
"<filename>tools/xslt/</filename> directory.  Keep in mind that the path "
"provided to the <literal>SVNIndexXSLT</literal> directory is actually a URL "
"path&mdash;browsers need to be able to read your stylesheets to make use of "
"them!"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3442
msgid "Listing repositories"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3444
msgid ""
"If you're serving a collection of repositories from a single URL via the "
"<literal>SVNParentPath</literal> directive, then it's also possible to have "
"Apache display all available repositories to a web browser.  Just activate "
"the <literal>SVNListParentPath</literal> directive:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3453
#, no-wrap
msgid ""
"&lt;Location /svn&gt;\n"
"  DAV svn\n"
"  SVNParentPath /var/svn\n"
"  SVNListParentPath on\n"
"  &hellip;\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3462
msgid ""
"If a user now points her web browser to the URL <literal>http://host.example."
"com/svn/</literal>, she'll see a list of all Subversion repositories sitting "
"in <filename>/var/svn</filename>.  Obviously, this can be a security "
"problem, so this feature is turned off by default."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3474
msgid "Apache logging"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3476
msgid ""
"Because Apache is an HTTP server at heart, it contains fantastically "
"flexible logging features.  It's beyond the scope of this book to discuss "
"all of the ways logging can be configured, but we should point out that even "
"the most generic <filename>httpd.conf</filename> file will cause Apache to "
"produce two logs: <filename>error_log</filename> and <filename>access_log</"
"filename>.  These logs may appear in different places, but are typically "
"created in the logging area of your Apache installation.  (On Unix, they "
"often live in <filename>/usr/local/apache2/logs/</filename>.)"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3489
msgid ""
"The <filename>error_log</filename> describes any internal errors that Apache "
"runs into as it works.  The <filename>access_log</filename> file records "
"every incoming HTTP request received by Apache.  This makes it easy to see, "
"for example, which IP addresses Subversion clients are coming from, how "
"often particular clients use the server, which users are authenticating "
"properly, and which requests succeed or fail."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3498
msgid ""
"Unfortunately, because HTTP is a stateless protocol, even the simplest "
"Subversion client operation generates multiple network requests.  It's very "
"difficult to look at the <filename>access_log</filename> and deduce what the "
"client was doing&mdash;most operations look like a series of cryptic "
"<literal>PROPPATCH</literal>, <literal>GET</literal>, <literal>PUT</"
"literal>, and <literal>REPORT</literal> requests.  To make things worse, "
"many client operations send nearly identical series of requests, so it's "
"even harder to tell them apart."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3509
msgid ""
"<command>mod_dav_svn</command>, however, can come to your aid.  By "
"activating an <quote>operational logging</quote> feature, you can ask "
"<command>mod_dav_svn</command> to create a separate log file describing what "
"sort of high-level operations your clients are performing."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3516
msgid ""
"To do this, you need to make use of Apache's <literal>CustomLog</literal> "
"directive (which is explained in more detail in Apache's own "
"documentation).  Be sure to invoke this directive <emphasis>outside</"
"emphasis> your Subversion <literal>Location</literal> block:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3525
#, no-wrap
msgid ""
"&lt;Location /svn&gt;\n"
"  DAV svn\n"
"  &hellip;\n"
"&lt;/Location&gt;\n"
"\n"
"CustomLog logs/svn_logfile \"%t %u %{SVN-ACTION}e\" env=SVN-ACTION\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3534
msgid ""
"In this example, we're asking Apache to create a special logfile, "
"<filename>svn_logfile</filename>, in the standard Apache <filename>logs</"
"filename> directory.  The <literal>%t</literal> and <literal>%u</literal> "
"variables are replaced by the time and username of the request, "
"respectively.  The really important parts are the two instances of "
"<literal>SVN-ACTION</literal>.  When Apache sees that variable, it "
"substitutes the value of the <literal>SVN-ACTION</literal> environment "
"variable, which is automatically set by <command>mod_dav_svn</command> "
"whenever it detects a high-level client action."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3546
msgid ""
"So, instead of having to interpret a traditional <filename>access_log</"
"filename> like this:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3552
#, no-wrap
msgid ""
"[26/Jan/2007:22:25:29 -0600] \"PROPFIND /svn/calc/!svn/vcc/default HTTP/1.1\" 207 398\n"
"[26/Jan/2007:22:25:29 -0600] \"PROPFIND /svn/calc/!svn/bln/59 HTTP/1.1\" 207 449\n"
"[26/Jan/2007:22:25:29 -0600] \"PROPFIND /svn/calc HTTP/1.1\" 207 647\n"
"[26/Jan/2007:22:25:29 -0600] \"REPORT /svn/calc/!svn/vcc/default HTTP/1.1\" 200 607\n"
"[26/Jan/2007:22:25:31 -0600] \"OPTIONS /svn/calc HTTP/1.1\" 200 188\n"
"[26/Jan/2007:22:25:31 -0600] \"MKACTIVITY /svn/calc/!svn/act/e6035ef7-5df0-4ac0-b811-4be7c823f998 HTTP/1.1\" 201 227\n"
"&hellip;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3562
msgid ""
"you can peruse a much more intelligible <filename>svn_logfile</filename> "
"like this:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3568
#, no-wrap
msgid ""
"[26/Jan/2007:22:24:20 -0600] - get-dir /tags r1729 props\n"
"[26/Jan/2007:22:24:27 -0600] - update /trunk r1729 depth=infinity\n"
"[26/Jan/2007:22:25:29 -0600] - status /trunk/foo r1729 depth=infinity\n"
"[26/Jan/2007:22:25:31 -0600] sally commit r1730\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3575
msgid ""
"In addition to the <literal>SVN-ACTION</literal> environment variable, "
"<command>mod_dav_svn</command> also populates the <literal>SVN-REPOS</"
"literal> and <literal>SVN-REPOS-NAME</literal> variables, which carry the "
"filesystem path to the repository and the basename thereof, respectively.  "
"You might wish to include references to one or both of these variables in "
"your <literal>CustomLog</literal> format string, too, especially if you are "
"combining usage information from multiple repositories into a single log "
"file.  For an exhaustive list of all actions logged, see <xref linkend=\"svn."
"serverconfig.operational-logging\"/>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3588
msgid ""
"Obviously, the more information that Apache logs about your Subversion "
"activities, the more disk space on your server those logs consume.  It is "
"non uncommon for high-traffic Subversion servers to generate many gigabytes "
"of log information daily.  Obviously, logs are only valuable if they can be "
"meaningfully processed, and huge log files can quickly become unwieldy.  "
"There are various standard approaches to Apache HTTP Server log management "
"which are outside the scope of this book.  Administrators are encouraged to "
"use the log rotation and archival approach which works best for them."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3600
msgid ""
"But what if Subversion is simply generating too much log information to be "
"useful? For example, in <xref linkend=\"svn.serverconfig.httpd.perf.bulk-"
"updates\" />, we mentioned that certain approaches that Subversion clients "
"may take to checkouts and other update-style operations can cause rapid "
"growth of your server logs as requests for individual pieces of the update "
"data set are individually logged (whereas in previous version of Subversion, "
"they might not have been).  In this case, you might consider using some "
"Apache configuration magic to selectively silence some of that log activity."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3612
msgid ""
"Apache HTTP Server's <literal>mod_setenvif</literal> module offers a "
"<literal>SetEnvIf</literal> directive which is handy for conditionally "
"setting environment variables.  And as it turns out, the <literal>CustomLog</"
"literal> directive can be told to conditionally log requests based on the "
"state of environment variables.  The following is a sample configuration "
"which instructs the server to <emphasis>not</emphasis> log <literal>GET</"
"literal> and <literal>PROPFIND</literal> requests aimed at private "
"Subversion URLs."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3626
#, no-wrap
msgid ""
"# Matches everything, just to initialize the \"in_repos\" variable.\n"
"SetEnvIf Request_URI \"^\" in_repos=0\n"
"\n"
"# Set \"in_repos\" if this is a request for a private Subversion URL.\n"
"SetEnvIf Request_URI \"/!svn/\" in_repos=1\n"
"\n"
"# Set \"do_not_log\" for non-public request types we don't care to log.\n"
"SetEnvIf Request_Method \"GET\" do_not_log\n"
"SetEnvIf Request_Method \"PROPFIND\" do_not_log\n"
"\n"
"# Unset \"do_not_log\" for URLs that aren't private Subversion URLs.\n"
"SetEnvIf in_repos 0 !do_not_log\n"
"\n"
"# Log requests, but only if \"do_not_log\" isn't set.\n"
"CustomLog logs/access_log env=!do_not_log\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3644
msgid ""
"Using this configuration, <command>httpd</command> would still log "
"<literal>GET</literal> requests aimed at public Subversion URLs.  These are "
"the sorts of requests generated by a web browser as someone navigates the "
"repository directly.  But <literal>GET</literal> and <literal>PROPFIND</"
"literal> requests aimed at so-called \"private\" Subversion URLs&mdash;which "
"are the very sorts of requests used to fetch each and every individual file "
"during a checkout operation&mdash;won't get logged."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3658
msgid "Write-through proxying"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><primary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3662
msgid "WebDAV"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><secondary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3663
msgid "proxies"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><see>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3664
msgid "httpd, write-through proxies"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><secondary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3668
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3673
msgid "write-through proxies"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><tertiary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3669
msgid "master"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para><indexterm><tertiary>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3674
msgid "slave"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3661
msgid ""
"<placeholder type=\"indexterm\" id=\"0\"/> <placeholder type=\"indexterm\" "
"id=\"1\"/> <placeholder type=\"indexterm\" id=\"2\"/>One of the nice "
"advantages of using Apache as a Subversion server is that it can be set up "
"for simple replication.  For example, suppose that your team is distributed "
"across four offices around the globe.  The Subversion repository can exist "
"only in one of those offices, which means the other three offices will not "
"enjoy accessing it&mdash;they're likely to experience significantly slower "
"traffic and response times when updating and committing code.  A powerful "
"solution is to set up a system consisting of one <firstterm>master</"
"firstterm> Apache server and several <firstterm>slave</firstterm> Apache "
"servers.  If you place a slave server in each office, users can check out a "
"working copy from whichever slave is closest to them.  All read requests go "
"to their local slave.  Write requests get automatically routed to the single "
"master server.  When the commit completes, the master then automatically "
"<quote>pushes</quote> the new revision to each slave server using the "
"<command>svnsync</command> replication tool."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3695
msgid ""
"This configuration creates a huge perceptual speed increase for your users, "
"because Subversion client traffic is typically 80&ndash;90% read requests.  "
"And if those requests are coming from a <emphasis>local</emphasis> server, "
"it's a huge win."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3701
msgid ""
"In this section, we'll walk you through a standard setup of this single-"
"master/multiple-slave system.  However, keep in mind that your servers must "
"be running at least Apache 2.2.0 (with <command>mod_proxy</command> loaded) "
"and Subversion 1.5 (<command>mod_dav_svn</command>)."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><note><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3708
msgid ""
"Ours is just one example of how you might setup a Subversion write-through "
"proxy configuration.  There are other approaches.  For example, rather than "
"having the master server push changes out to every slave server, the slaves "
"could periodically pull those changes from the master.  Or perhaps the "
"master could push changes to a single slave, which then pushes the same "
"change to the next slave, and so on down the line.  Administrators are "
"encouraged to use this section for basic understanding of what happens in a "
"Subversion WebDAV proxy deployment scenario, and then implement the specific "
"approach that works best for their organization."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3723
msgid "Configure the servers"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3725
msgid ""
"First, configure your master server's <filename>httpd.conf</filename> file "
"in the usual way.  Make the repository available at a certain URI location, "
"and configure authentication and authorization however you'd like.  After "
"that's done, configure each of your <quote>slave</quote> servers in the "
"exact same way, but add the special <literal>SVNMasterURI</literal> "
"directive to the block:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3736
#, no-wrap
msgid ""
"&lt;Location /svn&gt;\n"
"  DAV svn\n"
"  SVNPath /var/svn/repos\n"
"  SVNMasterURI http://master.example.com/svn\n"
"  &hellip;\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3745
msgid ""
"This new directive tells a slave server to redirect all write requests to "
"the master.  (This is done automatically via Apache's <command>mod_proxy</"
"command> module.)  Ordinary read requests, however, are still serviced by "
"the slaves.  Be sure that your master and slave servers all have matching "
"authentication and authorization configurations; if they fall out of sync, "
"it can lead to big headaches."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3754
msgid ""
"Next, we need to deal with the problem of infinite recursion.  With the "
"current configuration, imagine what will happen when a Subversion client "
"performs a commit to the master server.  After the commit completes, the "
"server uses <command>svnsync</command> to replicate the new revision to each "
"slave.  But because <command>svnsync</command> appears to be just another "
"Subversion client performing a commit, the slave will immediately attempt to "
"proxy the incoming write request back to the master! Hilarity ensues."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3765
msgid ""
"The solution to this problem is to have the master push revisions to a "
"different <literal>&lt;Location&gt;</literal> on the slaves.  This location "
"is configured to <emphasis>not</emphasis> proxy write requests at all, but "
"to accept normal commits from (and only from) the master's IP address:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3774
#, no-wrap
msgid ""
"&lt;Location /svn-proxy-sync&gt;\n"
"  DAV svn\n"
"  SVNPath /var/svn/repos\n"
"  Order deny,allow\n"
"  Deny from all\n"
"  # Only let the server's IP address access this Location:\n"
"  Allow from 10.20.30.40\n"
"  &hellip;\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3789
msgid "Set up replication"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3791
msgid ""
"Now that you've configured your <literal>Location</literal> blocks on master "
"and slaves, you need to configure the master to replicate to the slaves.  "
"Our walkthough uses <command>svnsync</command>, which is covered in more "
"detail in <xref linkend=\"svn.reposadmin.maint.replication.svnsync\" />."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3799
msgid ""
"First, make sure that each slave repository has a <filename>pre-revprop-"
"change</filename> hook script which allows remote revision property "
"changes.  (This is standard procedure for being on the receiving end of "
"<command>svnsync</command>.) Then log into the master server and configure "
"each of the slave repository URIs to receive data from the master repository "
"on the local disk:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3810
#, no-wrap
msgid ""
"$ svnsync init http://slave1.example.com/svn-proxy-sync \\\n"
"               file:///var/svn/repos\n"
"Copied properties for revision 0.\n"
"$ svnsync init http://slave2.example.com/svn-proxy-sync \\\n"
"               file:///var/svn/repos\n"
"Copied properties for revision 0.\n"
"$ svnsync init http://slave3.example.com/svn-proxy-sync \\\n"
"               file:///var/svn/repos\n"
"Copied properties for revision 0.\n"
"\n"
"# Perform the initial replication\n"
"\n"
"$ svnsync sync http://slave1.example.com/svn-proxy-sync \\\n"
"               file:///var/svn/repos\n"
"Transmitting file data ....\n"
"Committed revision 1.\n"
"Copied properties for revision 1.\n"
"Transmitting file data .......\n"
"Committed revision 2.\n"
"Copied properties for revision 2.\n"
"&hellip;\n"
"\n"
"$ svnsync sync http://slave2.example.com/svn-proxy-sync \\\n"
"               file:///var/svn/repos\n"
"Transmitting file data ....\n"
"Committed revision 1.\n"
"Copied properties for revision 1.\n"
"Transmitting file data .......\n"
"Committed revision 2.\n"
"Copied properties for revision 2.\n"
"&hellip;\n"
"\n"
"$ svnsync sync http://slave3.example.com/svn-proxy-sync \\\n"
"               file:///var/svn/repos\n"
"Transmitting file data ....\n"
"Committed revision 1.\n"
"Copied properties for revision 1.\n"
"Transmitting file data .......\n"
"Committed revision 2.\n"
"Copied properties for revision 2.\n"
"&hellip;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3854
msgid ""
"After this is done, we configure the master server's <literal>post-commit</"
"literal> hook script to invoke <command>svnsync</command> on each slave "
"server:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3860
#, no-wrap
msgid ""
"#!/bin/sh\n"
"# Post-commit script to replicate newly committed revision to slaves\n"
"\n"
"svnsync sync http://slave1.example.com/svn-proxy-sync \\\n"
"             file:///var/svn/repos &gt; /dev/null 2&gt;&amp;1 &amp;\n"
"svnsync sync http://slave2.example.com/svn-proxy-sync \\\n"
"             file:///var/svn/repos &gt; /dev/null 2&gt;&amp;1 &amp;\n"
"svnsync sync http://slave3.example.com/svn-proxy-sync \\\n"
"             file:///var/svn/repos &gt; /dev/null 2&gt;&amp;1 &amp;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3872
msgid ""
"The extra bits on the end of each line aren't necessary, but they're a "
"sneaky way to allow the sync commands to run in the background so that the "
"Subversion client isn't left waiting forever for the commit to finish.  In "
"addition to this <literal>post-commit</literal> hook, you'll need a "
"<literal>post-revprop-change</literal> hook as well so that when a user, "
"say, modifies a log message, the slave servers get that change also:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3884
#, no-wrap
msgid ""
"#!/bin/sh\n"
"# Post-revprop-change script to replicate revprop-changes to slaves\n"
"\n"
"REV=${2}\n"
"svnsync copy-revprops http://slave1.example.com/svn-proxy-sync \\\n"
"                      file:///var/svn/repos \\\n"
"                      -r ${REV} &gt; /dev/null 2&gt;&amp;1 &amp;\n"
"svnsync copy-revprops http://slave2.example.com/svn-proxy-sync \\\n"
"                      file:///var/svn/repos \\\n"
"                      -r ${REV} &gt; /dev/null 2&gt;&amp;1 &amp;\n"
"svnsync copy-revprops http://slave3.example.com/svn-proxy-sync \\\n"
"                      file:///var/svn/repos \\\n"
"                      -r ${REV} &gt; /dev/null 2&gt;&amp;1 &amp;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para><footnote><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3911
msgid ""
"<ulink url=\"http://subversion.tigris.org/issues/show_bug.cgi?id=3457\" /> "
"tracks these problems."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3900
msgid ""
"The only thing we've left out here is what to do about user-level locks (of "
"the <command>svn lock</command> variety).  Locks are enforced by the master "
"server during commit operations; but all the information about locks is "
"distributed during read operations such as <command>svn update</command> and "
"<command>svn status</command> by the slave server.  As such, a fully "
"functioning proxy setup needs to perfectly replicate lock information from "
"the master server to the slave servers.  Unfortunately, most of the "
"mechanisms that one might employ to accomplish this replication fall short "
"in one way or another<placeholder type=\"footnote\" id=\"0\"/>.  Many teams "
"don't use Subversion's locking features at all, so this may be a nonissue "
"for you.  Sadly, for those teams which do use locks, we have no "
"recommendations on how to gracefully work around this shortcoming."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3922
msgid "Caveats"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3924
msgid ""
"Your master/slave replication system should now be ready to use.  A couple "
"of words of warning are in order, however.  Remember that this replication "
"isn't entirely robust in the face of computer or network crashes.  For "
"example, if one of the automated <command>svnsync</command> commands fails "
"to complete for some reason, the slaves will begin to fall behind.  For "
"example, your remote users will see that they've committed revision 100, but "
"then when they run <command>svn update</command>, their local server will "
"tell them that revision 100 doesn't yet exist! Of course, the problem will "
"be automatically fixed the next time another commit happens and the "
"subsequent <command>svnsync</command> is successful&mdash;the sync will "
"replicate all waiting revisions.  But still, you may want to set up some "
"sort of out-of-band monitoring to notice synchronization failures and force "
"<command>svnsync</command> to run when things go wrong."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3943
msgid ""
"Another limitation of the write-through proxy deployment model involves "
"version mismatches&mdash;of the version of Subversion which is installed, "
"that is&mdash;between the master and slave servers.  Each new release of "
"Subversion may (and often does) add new features to the network protocol "
"used between the clients and servers.  Since feature negotiation happens "
"against the slave, it is the slave's protocol version and feature set which "
"is used.  But write operations are passed through to the master server quite "
"literally.  Therefore, there is a risk that the slave server will answer a "
"feature negotiation request from the client in way that is true for the "
"slave, but untrue for the master if the master is running an older version "
"of Subversion.  This could result in the client trying to use a new feature "
"that the master doesn't understand, and failing."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3960
msgid ""
"Subversion 1.8 helps to mitigate this problem via the introduction of a new "
"Apache configuration directive, <literal>SVNMasterVersion</literal>.  By "
"configuring each of your slave servers with <literal>SVNMasterVersion</"
"literal> set to the release version of the Subversion instance which is "
"running on your master server, the slave servers can more accurately "
"negotiate feature support with the client."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3970
msgid ""
"Unfortunately, Subversion 1.7 doesn't offer the <literal>SVNMasterVersion</"
"literal> configuration directive and is known to have some specific problems "
"along these lines.  If you are deploying a Subversion 1.7 slave server in "
"front of a pre-1.7 master, you'll want to configure your slave server's "
"Subversion <literal>&lt;Location&gt;</literal> block with the "
"<literal>SVNAdvertiseV2Protocol Off</literal> directive."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><tip><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3981
msgid ""
"For the best results possible, try to run the same version of Subversion on "
"your master and slave servers."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><sidebar><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3987
msgid "Can We Set Up Replication with svnserve?"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><sect4><sidebar><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:3989
msgid ""
"If you're using <command>svnserve</command> instead of Apache as your "
"server, you can certainly configure your repository's hook scripts to invoke "
"<command>svnsync</command> as we've shown here, thereby causing automatic "
"replication from master to slaves.  Unfortunately, at the time of this "
"writing there is no way to make slave <command>svnserve</command> servers "
"automatically proxy write requests back to the master server.  This means "
"your users would only be able to check out read-only working copies from the "
"slave servers.  You'd have to configure your slave servers to disallow write "
"access completely.  This might be useful for creating read-only "
"<quote>mirrors</quote> of popular open source projects, but it's not a "
"transparent proxying system."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4011
msgid "Other Apache features"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4013
msgid ""
"Several of the features already provided by Apache in its role as a robust "
"web server can be leveraged for increased functionality or security in "
"Subversion as well.  The Subversion client is able to use SSL (the Secure "
"Sockets Layer, discussed earlier).  If your Subversion client is built to "
"support SSL, it can access your Apache server using <literal>https://</"
"literal> and enjoy a high-quality encrypted network session."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4022
msgid ""
"Equally useful are other features of the Apache and Subversion relationship, "
"such as the ability to specify a custom port (instead of the default HTTP "
"port 80) or a virtual domain name by which the Subversion repository should "
"be accessed, or the ability to access the repository through an HTTP proxy."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4029
msgid ""
"Finally, because <command>mod_dav_svn</command> is speaking a subset of the "
"WebDAV/DeltaV protocol, it's possible to access the repository via third-"
"party DAV clients.  Most modern operating systems (Win32, OS X, and Linux) "
"have the built-in ability to mount a DAV server as a standard network "
"<quote>shared folder.</quote> This is a complicated topic, but also wondrous "
"when implemented.  For details, read <xref linkend=\"svn.webdav\"/>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4038
msgid ""
"Note that there are a number of other small tweaks one can make to "
"<command>mod_dav_svn</command> that perhaps do not merit extensive "
"coverage.  For those interested, however, we provide a complete list of all "
"<filename>httpd.conf</filename> directives to which <command>mod_dav_svn</"
"command> responds in <xref linkend=\"svn.serverconfig.httpd.ref.mod_dav_svn"
"\" />."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4052
msgid "Subversion Apache HTTP Server Configuration Reference"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4054
msgid ""
"In the previous sections, we've mentioned numerous directives that "
"administrators can use in their <filename>httpd.conf</filename> files to "
"enable and configure their Subversion server offering, introducing each "
"directive as we also introduce the functionality it toggles.  In this "
"section, we'll quickly summarize <emphasis>all</emphasis> the configuration "
"directives supported by both of the Apache HTTP Server modules which are "
"provided as part of the standard Subversion distribution."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4066
msgid "mod_dav_svn configuration directives"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4068
msgid ""
"The following configuration directives are recognized and supported by "
"Subversion's Apache HTTP Server module, <command>mod_dav_svn</command>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4075
msgid "<literal>DAV svn</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4078
msgid ""
"Must be included in any <literal>Directory</literal> or <literal>Location</"
"literal> block for a Subversion repository.  It tells <command>httpd</"
"command> to use the Subversion backend for <literal>mod_dav</literal> to "
"handle all requests."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4089
msgid ""
"<literal>SVNActivitiesDB <replaceable>directory-path</replaceable></literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4093
msgid ""
"Specifies the location in the filesystem where the activities database "
"should be stored.  By default, <command>mod_dav_svn</command> creates and "
"uses a directory in the repository called <filename>dav/activities.d</"
"filename>.  The path specified with this option must be an absolute path."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4101
msgid ""
"If specified for an <literal>SVNParentPath</literal> area, "
"<command>mod_dav_svn</command> appends the basename of the repository to the "
"path specified here.  For example:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4109
#, no-wrap
msgid ""
"&lt;Location /svn&gt;\n"
"  DAV svn\n"
"\n"
"  # any \"/svn/foo\" URL will map to a repository in \n"
"  # /net/svn.nfs/repositories/foo\n"
"  SVNParentPath         \"/net/svn.nfs/repositories\"\n"
"\n"
"  # any \"/svn/foo\" URL will map to an activities db in\n"
"  #  /var/db/svn/activities/foo\n"
"  SVNActivitiesDB       \"/var/db/svn/activities\"\n"
"&lt;/Location&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4127
msgid "<literal>SVNAdvertiseV2Protocol On|Off</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4130
msgid ""
"New to Subversion 1.7, this toggles whether <command>mod_dav_svn</command> "
"advertises its support for the new version of its HTTP protocol also "
"introduced in that version.  Most admins will not wish to use this directive "
"(which is <literal>On</literal> by default), choosing instead to enjoy the "
"performance benefits that the new protocol offers.  However, when "
"configuring a server as a write-through proxy to another server which does "
"not support the new protocol, set this directive's value to <literal>Off</"
"literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4146
msgid "<literal>SVNAllowBulkUpdates On|Off</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4149
msgid ""
"Toggles support for all-inclusive responses to update-style <literal>REPORT</"
"literal> requests.  Subversion clients use <literal>REPORT</literal> "
"requests to get information about directory tree checkouts and updates from "
"<command>mod_dav_svn</command>.  They can ask the server to send that "
"information in one of two ways: with the entirety of the tree's information "
"in one massive response, or with a <firstterm>skelta</firstterm> (a skeletal "
"representation of a tree delta) which contains just enough information for "
"the client to know what <emphasis>additional</emphasis> data to request from "
"the server.  When this directive is included with a value of <literal>Off</"
"literal>, <command>mod_dav_svn</command> will only ever respond to these "
"<literal>REPORT</literal> requests with skelta responses, regardless of the "
"type of responses requested by the client."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4169
msgid ""
"Most folks won't need to use this directive at all.  It primarily exists for "
"administrators who wish&mdash;for security or auditing reasons&mdash;to "
"force Subversion clients to fetch individually all the files and directories "
"needed for updates and checkouts, thus leaving an audit trail of "
"<literal>GET</literal> and <literal>PROPFIND</literal> requests in Apache's "
"logs.  The default value of this directive is <literal>On</literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4182
msgid "<literal>SVNAutoversioning On|Off</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4185
msgid ""
"When its value is <literal>On</literal>, allows write requests from WebDAV "
"clients to result in automatic commits.  A generic log message is auto-"
"generated and attached to each revision.  If you enable autoversioning, "
"you'll likely want to set <literal>ModMimeUsePathInfo On</literal> so that "
"<literal>mod_mime</literal> can set <literal>svn:mime-type</literal> to the "
"correct MIME type automatically (as best as <literal>mod_mime</literal> is "
"able to, of course).  For more information, see <xref linkend=\"svn.webdav\"/"
">.  The default value of this directive is <literal>Off</literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4203
msgid "<literal>SVNCacheFullTexts On|Off</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4206
msgid ""
"When set to <literal>On</literal>, this tells Subversion to cache content "
"fulltexts if sufficient in-memory cache is available, which could offer a "
"significant performance benefit to the server.  (See also the "
"<literal>SVNInMemoryCacheSize</literal> directive.)  The default value of "
"this directive is <literal>Off</literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4217
msgid "<literal>SVNCacheTextDeltas On|Off</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4220
msgid ""
"When set to <literal>On</literal>, this tells Subversion to cache content "
"deltas if sufficient in-memory cache is available, which could offer a "
"significant performance benefit to the server.  (See also the "
"<literal>SVNInMemoryCacheSize</literal> directive.)  The default value of "
"this directive is <literal>Off</literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4232
msgid "<literal>SVNCompressionLevel <replaceable>level</replaceable></literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4236
msgid ""
"Specifies the compression level used when sending file content over the "
"network.  A value of <literal>0</literal> disables compression altogether, "
"and <literal>9</literal> is the maximum value.  <literal>5</literal> is the "
"default value."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4247
msgid "<literal>SVNHooksEnv <replaceable>file-path</replaceable></literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4251
msgid ""
"Specifies the location of the Subversion repository hook script environment "
"configuration file.  This file is used to describe the initial environment "
"in which repository hook scripts are executed.  For more on this feature, "
"see <xref linkend=\"svn.reposadmin.hooks.configuration\" />."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4263
msgid ""
"<literal>SVNIndexXSLT <replaceable>directory-path</replaceable></literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4267
msgid ""
"Specifies the URI of an XSL transformation for directory indexes.  This "
"directive is optional."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4274
msgid "<literal>SVNInMemoryCacheSize <replaceable>size</replaceable></literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4278
msgid ""
"Specifies the maximum size (in kbytes) per process of Subversion's in-memory "
"object cache.  The default value is <literal>16384</literal>; use a value of "
"<literal>0</literal> to deactivate this cache altogether."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4288
msgid "<literal>SVNListParentPath On|Off</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4291
msgid ""
"When set to <literal>On</literal>, allows a <literal>GET</literal> of "
"<literal>SVNParentPath</literal>, which results in a listing of all "
"repositories under that path.  The default setting is <literal>Off</literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4302
msgid "<literal>SVNMasterURI <replaceable>url</replaceable></literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4306
msgid ""
"Specifies a URI to the master Subversion repository (used for a write-"
"through proxy)."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4313
msgid "<literal>SVNMasterVersion <replaceable>X.Y</replaceable></literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4317
msgid ""
"Specifies the release version number of the Subversion instance which is "
"serving the master repository (used for a write-through proxy)."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4325
msgid ""
"<literal>SVNParentPath <replaceable>directory-path</replaceable></literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4329
msgid ""
"Specifies the location in the filesystem of a parent directory whose child "
"directories are Subversion repositories.  In a configuration block for a "
"Subversion repository, either this directive or <literal>SVNPath</literal> "
"must be present, but not both."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4340
msgid "<literal>SVNPath <replaceable>directory-path</replaceable></literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4344
msgid ""
"Specifies the location in the filesystem for a Subversion repository's "
"files.  In a configuration block for a Subversion repository, either this "
"directive or <literal>SVNParentPath</literal> must be present, but not both."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4355
msgid "<literal>SVNPathAuthz On|Off|short_circuit</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4358
msgid ""
"Controls path-based authorization by enabling subrequests (<literal>On</"
"literal>), disabling subrequests (<literal>Off</literal>; see <xref linkend="
"\"svn.serverconfig.httpd.authz.pathauthzoff\"/>), or querying "
"<command>mod_authz_svn</command> directly (<literal>short_circuit</"
"literal>).  The default value of this directive is <literal>On</literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4370
msgid "<literal>SVNReposName <replaceable>name</replaceable></literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4374
msgid ""
"Specifies the name of a Subversion repository for use in <literal>HTTP GET</"
"literal> responses.  This value will be prepended to the title of all "
"directory listings (which are served when you navigate to a Subversion "
"repository with a web browser).  This directive is optional."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><note><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4382
msgid ""
"Subversion will not use the repository name as configured via this directive "
"when trying to match rules in access control files.  The repository names "
"used in that file's syntax are always derived from the repository URL.  See "
"<xref linkend=\"svn.serverconfig.pathbasedauthz.getting-started\" /> for "
"details."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4395
msgid "<literal>SVNSpecialURI <replaceable>component</replaceable></literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4399
msgid ""
"Specifies the URI component (namespace) for special Subversion resources.  "
"The default is <literal>!svn</literal>, and most administrators will never "
"use this directive.  Set this only if there is a pressing need to have a "
"file named <filename>!svn</filename> in your repository.  If you change this "
"on a server already in use, it will break all of the outstanding working "
"copies, and your users will hunt you down with pitchforks and flaming "
"torches."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4414
msgid "<literal>SVNUseUTF8 On|Off</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4417
msgid ""
"When set to <literal>On</literal>, <command>mod_dav_svn</command> will "
"communicate with hook scripts using repository root paths encoded in UTF-8, "
"and will expect those scripts to likewise generate output (such as error "
"messages) encoded in UTF-8.  The default value of this option is "
"<literal>Off</literal>, which means that <command>mod_dav_svn</command> "
"assumes a 7-bit ASCII encoding for its hook script interactions.  This "
"option is available as of Subversion 1.8."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><note><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4429
msgid ""
"Administrators should ensure that the character set and encoding "
"expectations of hook scripts match all the ways they might be invoked.  For "
"example, if one repository is served by both <command>httpd</command> and "
"<command>svnserve</command>, <command>svnserve</command> should also be "
"configured to use UTF-8 (by setting an appropriate locale in its "
"environment) if this option is enabled for <command>mod_dav_svn</command>.  "
"Also, local filesystem paths containing non-ASCII characters which will be "
"accessed by those scripts (such as repository root paths) must be properly "
"encoded in the filesystem to match the scripts' expectations."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4452
msgid "mod_authz_svn configuration directives"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4454
msgid ""
"The following configuration directives are provided by "
"<command>mod_authz_svn</command>, Subversion's path-based authorization "
"Apache HTTP Server module.  For an in-depth description of using path-based "
"authorization in Subversion, see <xref linkend=\"svn.serverconfig."
"pathbasedauthz\"/>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4463
msgid "<literal>AuthzForceUsernameCase Upper|Lower</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4466
msgid ""
"Set to <literal>Upper</literal> or <literal>Lower</literal> to perform case "
"conversion of the specified sort on the authenticated username before "
"checking it for authorization.  While usernames are compared in a case-"
"sensitive fashion against those referenced in the authorization rules file, "
"this directive can at least normalize variably-cased usernames into "
"something consistent."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4479
msgid ""
"<literal>AuthzSVNAccessFile <replaceable>file-path</replaceable></literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4483
msgid ""
"Consult <replaceable>file-path</replaceable> for access rules describing the "
"permissions for paths in Subversion repository.  In a configuration block "
"for a Subversion repository or a colletion of repositories, either this "
"directive or <literal>AuthzSVNReposRelativeAccessFile</literal> can be "
"present, but not both."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4490
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4557
msgid ""
"Beginning with Subversion 1.8, <literal>AuthzSVNAccessFile</literal> accepts "
"a URL to a file stored inside a Subversion repository.  It is possible to "
"store the file in the same repository to which the access rules are being "
"applied or another repository."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4500
msgid "<literal>AuthzSVNAnonymous On|Off</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4503
msgid ""
"Set to <literal>Off</literal> to disable two special-case behaviours of this "
"module: interaction with the <literal>Satisfy Any</literal> directive and "
"enforcement of the authorization policy even when no <literal>Require</"
"literal> directives are present.  The default value of this directive is "
"<literal>On</literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4515
msgid "<literal>AuthzSVNAuthoritative On|Off</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4518
msgid ""
"Set to <literal>Off</literal> to allow access control to be passed along to "
"lower modules.  The default value of this directive is <literal>On</literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4527
msgid "<literal>AuthzSVNNoAuthWhenAnonymousAllowed On|Off</literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4530
msgid ""
"Set to <literal>On</literal> to suppress authentication and authorization "
"for requests which anonymous users are allowed to perform.  The default "
"value of this directive is <literal>On</literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4540
msgid ""
"<literal>AuthzSVNReposRelativeAccessFile <replaceable>file-path</"
"replaceable></literal>"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><sect3><variablelist><varlistentry><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4544
msgid ""
"Consult <replaceable>file-path</replaceable> for access rules describing the "
"permissions for paths in Subversion repository.  Unlike "
"<literal>AuthzSVNAccessFile</literal>, the path specified for "
"<literal>AuthzSVNReposRelativeAccessFile</literal> is relative from the /"
"conf directory in the repository on filesystem.  In other words, the "
"<replaceable>file-path</replaceable> specifies a per repository file that "
"must by accessible by the relative path for all repositories in a "
"configuration block.  In a configuration block for a Subversion repository "
"or a collection of repositories either this directive or "
"<literal>AuthzSVNAccessFile</literal> can be present, but not both.  This "
"option is available as of Subversion 1.7."
msgstr ""

#. type: Content of: <chapter><sect1><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4577
msgid "Path-Based Authorization"
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4579
msgid ""
"Both Apache and <command>svnserve</command> are capable of granting (or "
"denying) permissions to users.  Typically this is done over the entire "
"repository: a user can read the repository (or not), and she can write to "
"the repository (or not)."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4584
msgid ""
"It's also possible, however, to define finer-grained access rules.  One set "
"of users may have permission to write to a certain directory in the "
"repository, but not others; another directory might not even be readable by "
"all but a few special people.  It's even possible to restrict access on a "
"per file basis."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4591
msgid ""
"Both Subversion servers use a common file format to describe these path-"
"based access rules.  In this section, we will explain that file format, as "
"well how to configure your Subversion server to use it for managing path-"
"based authorization."
msgstr ""

#. type: Content of: <chapter><sect1><sidebar><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4598
msgid "Do You Really Need Path-Based Access Control?"
msgstr ""

#. type: Content of: <chapter><sect1><sidebar><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4600
msgid ""
"A lot of administrators setting up Subversion for the first time tend to "
"jump into path-based access control without giving it a lot of thought.  The "
"administrator usually knows which teams of people are working on which "
"projects, so it's easy to jump in and grant certain teams access to certain "
"directories and not others.  It seems like a natural thing, and it appeases "
"the administrator's desire to maintain tight control of the repository."
msgstr ""

#. type: Content of: <chapter><sect1><sidebar><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4609
msgid ""
"Note, though, that there are often invisible (and visible!) costs associated "
"with this feature.  In the visible category, the server needs to do a lot "
"more work to ensure that the user has the right to read or write each "
"specific path; in certain situations, there's very noticeable performance "
"loss.  In the invisible category, consider the culture you're creating.  "
"Most of the time, while certain users <emphasis>shouldn't</emphasis> be "
"committing changes to certain parts of the repository, that social contract "
"doesn't need to be technologically enforced.  Teams can sometimes "
"spontaneously collaborate with each other; someone may want to help someone "
"else out by committing to an area she doesn't normally work on.  By "
"preventing this sort of thing at the server level, you're setting up "
"barriers to unexpected collaboration.  You're also creating a bunch of rules "
"that need to be maintained as projects develop, new users are added, and so "
"on.  It's a bunch of extra work to maintain."
msgstr ""

#. type: Content of: <chapter><sect1><sidebar><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4628
msgid ""
"Remember that this is a version control system! Even if somebody "
"accidentally commits a change to something she shouldn't, it's easy to undo "
"the change.  And if a user commits to the wrong place with deliberate "
"malice, it's a social problem anyway, and that the problem needs to be dealt "
"with outside Subversion."
msgstr ""

#. type: Content of: <chapter><sect1><sidebar><para><footnote><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4641
msgid "A common theme in this book!"
msgstr ""

#. type: Content of: <chapter><sect1><sidebar><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4635
msgid ""
"So, before you begin restricting users' access rights, ask yourself whether "
"there's a real, honest need for this, or whether it's just something that "
"<quote>sounds good</quote> to an administrator.  Decide whether it's worth "
"sacrificing some server speed, and remember that there's very little risk "
"involved; it's bad to become dependent on technology as a crutch for social "
"problems.<placeholder type=\"footnote\" id=\"0\"/>"
msgstr ""

#. type: Content of: <chapter><sect1><sidebar><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4644
msgid ""
"As an example to ponder, consider that the Subversion project itself has "
"always had a notion of who is allowed to commit where, but it's always been "
"enforced socially.  This is a good model of community trust, especially for "
"open source projects.  Of course, sometimes there <emphasis>are</emphasis> "
"truly legitimate needs for path-based access control; within corporations, "
"for example, certain types of data really can be sensitive, and access needs "
"to be genuinely restricted to small groups of people."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4659
msgid "Getting Started with Path-Based Access Control"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4661
msgid ""
"Subversion offers path-based access control in Apache via the "
"<command>mod_authz_svn</command> module, which must be loaded using the "
"<literal>LoadModule</literal> directive in <filename>httpd.conf</filename> "
"in the same fashion that <command>mod_dav_svn</command> itself is loaded.  "
"To enable the use of this module for your repositories, you'll add the "
"<literal>AuthzSVNAccessFile</literal> or "
"<literal>AuthzSVNReposRelativeAccessFile</literal> directives (again within "
"the <filename>httpd.conf</filename> file) pointing to your own access rules "
"file.  (For a full explanation, see <xref linkend=\"svn.serverconfig.httpd."
"authz.perdir\"/>.)"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4673
msgid ""
"To configure path-based authorization in <command>svnserve</command>, simply "
"point the <literal>authz-db</literal> configuration variable (within your "
"<filename>svnserve.conf</filename> file) to your access rules file."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4679
msgid ""
"Once your server knows where to look for your access rules, it's time to "
"define those rules."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4682
msgid ""
"The syntax of the Subversion access file is the same familiar one used by "
"<filename>svnserve.conf</filename> and the runtime configuration files.  "
"Lines that start with a hash (<literal>#</literal>) are ignored.  In its "
"simplest form, each section names a versioned path and, optionally, the "
"repository in which that path is found.  In other words, except for a few "
"reserved sections, section names are of one of two forms: either "
"<literal>[repos-name:path]</literal> or <literal>[path]</literal> when "
"<literal>AuthzSVNAccessFile</literal> is used.  If you configured per "
"repository access files via <literal>AuthzSVNReposRelativeAccessFile</"
"literal> directive, you should always use <literal>[path]</literal> form "
"only.  Authenticated usernames are the option names within each section, and "
"an option's value describes that user's level of access to the repository "
"path: either <literal>r</literal> (read-only) or <literal>rw</literal> (read/"
"write).  If the user is not mentioned at all, no access is allowed."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><note><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4702
msgid ""
"Paths used in access file sections must be specified using Subversion's "
"<quote>internal style</quote>, which mostly just means that they are encoded "
"in UTF-8 and use forward slash (<literal>/</literal>) characters as "
"directory separators (even on Windows systems).  Note also that these paths "
"do not employ any character escaping mechanism (such as URI-encoding)&mdash;"
"spaces in path names should be represented exactly as such in access file "
"section names (<literal>[repos-name:path&nbsp;with&nbsp;spaces]</literal>, e."
"g.)"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4714
msgid ""
"Here's a simple example demonstrating a piece of the access configuration "
"which grants read access Sally, and read/write access to Harry, for the path "
"<filename>/branches/calc/bug-142</filename> (and all its children) in the "
"repository <literal>calc</literal>:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4722
#, no-wrap
msgid ""
"[calc:/branches/calc/bug-142]\n"
"harry = rw\n"
"sally = r\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><warning><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4729
msgid ""
"Prior to version 1.7, Subversion treated repository names and paths in a "
"case-insensitive fashion for the purposes of access control, converting them "
"to lower case internally before comparing them against the contents of your "
"access file.  It now does these comparisons case-sensitively.  If you "
"upgraded to Subversion 1.7 from an older version, you should review your "
"access files for case correctness."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para><footnote><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4742
msgid ""
"Any human-readable name for a repository configured via the "
"<literal>SVNReposName</literal> <filename>httpd.conf</filename> directive "
"will be ignored by the authorization subsystem.  Your access control file "
"sections must refer to repositories by their server-sensitive paths as "
"previously described."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4738
msgid ""
"The name of a repository as evaluated by the authorization subsystem is "
"derived directly from the repository's path.  Exactly how this happens "
"differs between to two server options. <command>mod_dav_svn</command> uses "
"only the basename of the repository's root URL<placeholder type=\"footnote\" "
"id=\"0\"/>, while <command>svnserve</command> uses the entire relative path "
"from the serving root (as determined by its <option>--root</option> "
"(<option>-r</option>) command-line option) to the repository."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><warning><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4755
msgid ""
"The differences in the ways that a repository's name is determined by each "
"of <command>mod_dav_svn</command> and <command>svnserve</command> can cause "
"problems when trying to serve a repository via both servers simultaneously.  "
"Naturally, an administrator would prefer to point both servers' "
"configurations toward a common access file.  However, for this to work, you "
"must ensure that the repository name portion of the file's section names are "
"compatible with each server's idea of what the repository name should "
"be&mdash;for example, by configuring <command>svnserve</command>'s root to "
"be the same as <command>mod_dav_svn</command>'s configured "
"<literal>SVNParentPath</literal>, or by using a different access file per "
"repository so that section names needn't reference the repository at all."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4772
msgid ""
"If you're using the <literal>SVNParentPath</literal> directive, it's "
"important to specify the repository names in your sections.  If you omit "
"them, a section such as <literal>[/some/dir]</literal> will match the path "
"<filename>/some/dir</filename> in <emphasis>every</emphasis> repository.  If "
"you're using the <literal>SVNPath</literal> directive, however, it's fine to "
"provide only paths in your sections&mdash;after all, there's only one "
"repository."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4781
msgid ""
"Permissions are inherited from a path's parent directory.  That means we can "
"specify a subdirectory with a different access policy for Sally.  Let's "
"continue our previous example, and grant Sally write access to a child of "
"the branch that she's otherwise permitted only to read:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4789
#, no-wrap
msgid ""
"[calc:/branches/calc/bug-142]\n"
"harry = rw\n"
"sally = r\n"
"\n"
"# give sally write access only to the 'testing' subdir\n"
"[calc:/branches/calc/bug-142/testing]\n"
"sally = rw\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4799
msgid ""
"Now Sally can write to the <filename>testing</filename> subdirectory of the "
"branch, but can still only read other parts.  Harry, meanwhile, continues to "
"have complete read/write access to the whole branch."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4804
msgid ""
"It's also possible to explicitly deny permission to someone via inheritance "
"rules, by setting the username variable to nothing:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4810
#, no-wrap
msgid ""
"[calc:/branches/calc/bug-142]\n"
"harry = rw\n"
"sally = r\n"
"\n"
"[calc:/branches/calc/bug-142/secret]\n"
"harry =\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4819
msgid ""
"In this example, Harry has read/write access to the entire "
"<filename>bug-142</filename> tree, but has absolutely no access at all to "
"the <filename>secret</filename> subdirectory within it."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><tip><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4825
msgid ""
"The thing to remember is that the most specific path always matches first.  "
"The server tries to match the path itself, and then the parent of the path, "
"then the parent of that, and so on.  The net effect is that mentioning a "
"specific path in the access file will always override any permissions "
"inherited from parent directories."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><tip><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4832
msgid ""
"Similarly, sections that specify a repository name have precedence over "
"those that don't: if both <literal>[calc:/some/path]</literal> and "
"<literal>[/some/path]</literal> are present, the former will be used and the "
"latter ignored for <literal>calc</literal>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4839
msgid ""
"By default, nobody has any access to any repository at all.  That means that "
"if you're starting with an empty file, you'll probably want to give at least "
"read permission to all users at the roots of the repositories.  You can do "
"this by using the asterisk variable (<literal>*</literal>), which means "
"<quote>all users</quote>:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4848
#, no-wrap
msgid ""
"[/]\n"
"* = r\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4853
msgid ""
"This is a common setup; notice that no repository name is mentioned in the "
"section name.  This makes all repositories world-readable to all users.  "
"Once all users have read access to the repositories, you can give explicit "
"<literal>rw</literal> permission to certain users on specific subdirectories "
"within specific repositories."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4860
msgid ""
"Note that while all of the previous examples use directories, that's only "
"because defining access rules on directories is the most common case.  You "
"may similarly restrict access on file paths, too."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4867
#, no-wrap
msgid ""
"[calendar:/projects/calendar/manager.ics]\n"
"harry = rw\n"
"sally = r\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4878
msgid "Access Control Groups"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4880
msgid ""
"The access file also allows you to define whole groups of users, much like "
"the Unix <filename>/etc/group</filename> file.  To do this, create a "
"<literal>groups</literal> section in your access file, and then describe "
"your groups within that section: each variable's name defines the name of "
"the group, and its value is a comma-delimited list of usernames which are "
"part of that group."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4890
#, no-wrap
msgid ""
"[groups]\n"
"calc-developers = harry, sally, joe\n"
"paint-developers = frank, sally, jane\n"
"everyone = harry, sally, joe, frank, jane\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4897
msgid ""
"Groups can be granted access control just like users.  Distinguish them with "
"an <quote>at sign</quote> (<literal>@</literal>) prefix:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4903
#, no-wrap
msgid ""
"[calc:/projects/calc]\n"
"@calc-developers = rw\n"
"\n"
"[paint:/projects/paint]\n"
"jane = r\n"
"@paint-developers = rw\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4912
msgid ""
"Another important fact is that group permissions are not overridden by "
"individual user permissions. Rather, the <emphasis>combination</emphasis> of "
"all matching permissions is granted.  In the prior example, Jane is a member "
"of the <literal>paint-developers</literal> group, which has read/write "
"access.  Combined with the <literal>jane = r</literal> rule, this still "
"gives Jane read/write access.  Permissions for group members can only be "
"extended beyond the permissions the group already has. Restricting users who "
"are part of a group to less than their group's permissions is impossible."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4923
msgid "Groups can also be defined to contain other groups:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4927
#, no-wrap
msgid ""
"[groups]\n"
"calc-developers = harry, sally, joe\n"
"paint-developers = frank, sally, jane\n"
"everyone = @calc-developers, @paint-developers\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4939
msgid "Username Aliases"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4941
msgid ""
"Some authentication systems expect and carry relatively short usernames of "
"the sorts we've been describing here&mdash;<literal>harry</literal>, "
"<literal>sally</literal>, <literal>joe</literal>, and so on.  But other "
"authentication systems&mdash;such as those which use LDAP stores or SSL "
"client certificates&mdash;may carry much more complex usernames.  For "
"example, Harry's username in an LDAP-protected system might be "
"<literal>CN=Harold Hacker,OU=Engineers,DC=red-bean,DC=com</literal>.  With "
"usernames like that, the access file can become quite bloated with long or "
"obscure usernames that are easy to mistype."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4954
msgid ""
"Fortunately, Subversion 1.5 introduced username aliases to the access file "
"syntax.  Username aliases allow you to have to type the correct complex "
"username only once, in a statement which assigns to it a more easily "
"digestable alias."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4959
msgid ""
"Username aliases are defined in the special <literal>aliases</literal> "
"section of the access file, with each variable name in that section defining "
"an alias, and the value of those variables carrying the real Subversion "
"username which is being aliased."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4967
#, no-wrap
msgid ""
"[aliases]\n"
"harry = CN=Harold Hacker,OU=Engineers,DC=red-bean,DC=com\n"
"sally = CN=Sally Swatterbug,OU=Engineers,DC=red-bean,DC=com\n"
"joe = CN=Gerald I. Joseph,OU=Engineers,DC=red-bean,DC=com\n"
"&hellip;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4975
msgid ""
"Once you've defined a set of aliases, you can refer to the users elsewhere "
"in the access file via their aliases in all the same places you could have "
"instead used their actual usernames.  Simply prepend an ampersand to the "
"alias to distinguish it from a regular username:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4983
#, no-wrap
msgid ""
"[groups]\n"
"calc-developers = &amp;harry, &amp;sally, &amp;joe\n"
"paint-developers = &amp;frank, &amp;sally, &amp;jane\n"
"everyone = @calc-developers, @paint-developers\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:4990
msgid ""
"You might also choose to use aliases if your users' usernames change "
"frequently.  Doing so allows you to need to update only the aliases table "
"when these username changes occur, instead of doing global search-and-"
"replace operations on the whole access file."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5001
msgid "Advanced Access Control Features"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5003
msgid ""
"Beginning with Subversion 1.5, the access file syntax also supports some "
"<quote>magic</quote> tokens for helping you to make rule assignments based "
"on the user's authentication class.  One such token is the <literal>"
"$authenticated</literal> token.  Use this token where you would otherwise "
"specify a username, alias, or group name in your authorization rules to "
"declare the permissions granted to any user who has authenticated with any "
"username at all.  Similarly employed is the <literal>$anonymous</literal> "
"token, except that it matches everyone who has <emphasis>not</emphasis> "
"authenticated with a username."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5017
#, no-wrap
msgid ""
"[calendar:/projects/calendar]\n"
"$anonymous = r\n"
"$authenticated = rw\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5023
msgid ""
"Another handy bit of access file syntax magic is the use of the tilde "
"(<literal>~</literal>) character as an exclusion marker.  In your "
"authorization rules, prefixing a username, alias, group name, or "
"authentication class token with a tilde character will cause Subversion to "
"apply the rule to users who do <emphasis>not</emphasis> match the rule.  "
"Though somewhat unnecessarily obfuscated, the following block is equivalent "
"to the one in the previous example:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5034
#, no-wrap
msgid ""
"[calendar:/projects/calendar]\n"
"~$authenticated = r\n"
"~$anonymous = rw\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5040
msgid "A less obvious example might be as follows:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5044
#, no-wrap
msgid ""
"[groups]\n"
"calc-developers = &amp;harry, &amp;sally, &amp;joe\n"
"calc-owners = &amp;hewlett, &amp;packard\n"
"calc = @calc-developers, @calc-owners\n"
"\n"
"# Any calc participant has read-write access...\n"
"[calc:/projects/calc]\n"
"@calc = rw\n"
"\n"
"# ...but only allow the owners to make and modify release tags.\n"
"[calc:/projects/calc/tags]\n"
"~@calc-owners = r\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5064
msgid "Some Gotchas with Access Control"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5066
msgid ""
"If you're using Apache as your Subversion server and have made certain "
"subdirectories of your repository unreadable to certain users, you need to "
"be aware of a possible nonoptimal behavior with <command>svn checkout</"
"command>."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5071
msgid ""
"Depending on which HTTP communication library the Subversion client is "
"using, it may request that the entire payload of a checkout or update be "
"delivered in a single (often large) response to the primary checkout/update "
"request.  When this happens, this single request is the <emphasis>only</"
"emphasis> opportunity Apache has to demand user authentication.  This has "
"some odd side effects.  For example, if a certain subdirectory of the "
"repository is readable only by user Sally, and user Harry checks out a "
"parent directory, his client will respond to the initial authentication "
"challenge as Harry.  As the server generates the large response, there's no "
"way it can resend an authentication challenge when it reaches the special "
"subdirectory; thus the subdirectory is skipped altogether, rather than "
"asking the user to reauthenticate as Sally at the right moment."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para><footnote><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5092
msgid ""
"For more on this, see the blog post <emphasis>Authz and Anon Authn Agony</"
"emphasis> at <ulink url=\"http://blogs.collab.net/subversion/2007/03/"
"authz_and_anon_/\" />."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5088
msgid ""
"In a similar way, if the root of the repository is anonymously world-"
"readable, the entire checkout will be done without authentication&mdash;"
"again, skipping the unreadable directory, rather than asking for "
"authentication partway through.<placeholder type=\"footnote\" id=\"0\"/>"
msgstr ""

#. type: Content of: <chapter><sect1><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5105
msgid "High-level Logging"
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5107
msgid ""
"Both the Apache <command>httpd</command> and <command>svnserve</command> "
"Subversion servers provide support for high-level logging of Subversion "
"operations.  Configuring each of the server options to provide this level of "
"logging is done differently, of course, but the output from each is designed "
"to conform to a uniform syntax."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5114
msgid ""
"To enable high-level logging in <command>svnserve</command>, you need only "
"use the <option>--log-file</option> command-line option when starting the "
"server, passing as the value to the option the file to which "
"<command>svnserve</command> should write its log output."
msgstr ""

#. type: Content of: <chapter><sect1><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5122
#, no-wrap
msgid "$ svnserve -d -r /path/to/repositories --log-file /var/log/svn.log\n"
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5126
msgid ""
"Enabling the same in Apache is a bit more involved, but is essentially an "
"extension of Apache's stock log output configuration mechanisms&mdash;see "
"<xref linkend=\"svn.serverconfig.httpd.extra.logging\"/> for details."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5132
msgid ""
"The following is a list of Subversion action log messages produced by its "
"high-level logging mechanism, followed by one or more examples of the log "
"message as it appears in the log output."
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5139
msgid "Checkout or export"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5142
#, no-wrap
msgid "checkout-or-export /path r62 depth=infinity\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5147
msgid "Commit"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5150
#, no-wrap
msgid "commit harry r100\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5155
msgid "Diffs"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5158
#, no-wrap
msgid ""
"diff /path r15:20 depth=infinity ignore-ancestry\n"
"diff /path1@15 /path2@20 depth=infinity ignore-ancestry\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5164
msgid "Fetch a directory"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5167
#, no-wrap
msgid "get-dir /trunk r17 text\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5172
msgid "Fetch a file"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5175
#, no-wrap
msgid "get-file /path r20 props\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5180
msgid "Fetch a file revision"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5183
#, no-wrap
msgid "get-file-revs /path r12:15 include-merged-revisions\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5188
msgid "Fetch merge information"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5191
#, no-wrap
msgid "get-mergeinfo (/path1 /path2)\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5196
msgid "Lock"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5199
#, no-wrap
msgid "lock /path steal\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5204
msgid "Log"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5207
#, no-wrap
msgid "log (/path1,/path2,/path3) r20:90 discover-changed-paths revprops=()\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5212
msgid "Replay revisions (svnsync)"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5215
#, no-wrap
msgid "replay /path r19\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5220
msgid "Revision property change"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5223
#, no-wrap
msgid "change-rev-prop r50 propertyname\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5228
msgid "Revision property list"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5231
#, no-wrap
msgid "rev-proplist r34\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5236
msgid "Status"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5239
#, no-wrap
msgid "status /path r62 depth=infinity\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5244
msgid "Switch"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5247
#, no-wrap
msgid "switch /pathA /pathB@50 depth=infinity\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5252
msgid "Unlock"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5255
#, no-wrap
msgid "unlock /path break\n"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><term>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5260
msgid "Update"
msgstr ""

#. type: Content of: <chapter><sect1><variablelist><varlistentry><listitem><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5263
#, no-wrap
msgid "update /path r17 send-copyfrom-args\n"
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5269
msgid ""
"As a convenience to administrators who wish to post-process their Subversion "
"high-level logging output (perhaps for reporting or analysis purposes), "
"Subversion source code distributions provide a Python module (located at "
"<filename>tools/server-side/svn_server_log_parse.py</filename>)  which can "
"be used to parse Subversion's log output."
msgstr ""

#. type: Content of: <chapter><sect1><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5282
msgid "Server Optimization"
msgstr ""

#. type: Content of: <chapter><sect1><para><footnote><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5289
msgid ""
"In Subversion's case, the skyrocketing affect is, of course, due to its cool "
"name.  Well, that and its popularity, reliability, ease of use&hellip;."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5284
msgid ""
"Part of the due diligence when offering a service such as a Subversion "
"server involves capacity planning and performance tuning.  Subversion "
"doesn't tend to be particularly greedy in terms of server resources such as "
"CPU cycles and memory, but any service can benefit from optimizations, "
"especially when usage of the service skyrockets<placeholder type=\"footnote"
"\" id=\"0\"/>.  In this section, we'll discuss some ways you can tweak your "
"Subversion server configuration to offer even better performance and "
"scalability."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5298
msgid "Data Caching"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5300
msgid ""
"Generally speaking, the most expensive part of a Subversion server's job is "
"fetching data from the repository.  Subversion 1.6 attempted to offset this "
"cost by introducing some in-memory caching of certain classes of data read "
"from the repository.  But Subversion 1.7 takes this a step further, not only "
"caching the results of some of the more costly operations, but also by "
"providing in each of the available servers the means by which fine-tune the "
"size and some behaviors of the cache."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5310
msgid ""
"For <command>svnserve</command>, you can specify the size of the cache using "
"the <option>--memory-cache-size</option> (<option>-M</option>) command-line "
"option.  You can also dictate whether <command>svnserve</command> should "
"attempt to cache content fulltexts and deltas via the boolean <option>--"
"cache-fulltexts</option> and <option>--cache-txdeltas</option> options, "
"respectively."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5321
#, no-wrap
msgid ""
"$ svnserve -d -r /path/to/repositories \\\n"
"           --memory-cache-size 1024 \\\n"
"           --cache-txdeltas yes \\\n"
"           --cache-fulltexts yes\n"
"&hellip;\n"
"$\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5330
msgid ""
"<command>mod_dav_svn</command> provides the same degree of cache "
"configurability via <filename>httpd.conf</filename> directives.  The "
"<literal>SVNInMemoryCacheSize</literal>, <literal>SVNCacheFullTexts</"
"literal>, and <literal>SVNCacheTextDeltas</literal> directives may be used "
"at the server configuration level to control Subversion's data cache "
"characteristics:"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><informalexample><programlisting>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5341
#, no-wrap
msgid ""
"&lt;IfModule dav_svn_module&gt;\n"
"  # Enable a 1 Gb Subversion data cache for both fulltext and deltas.\n"
"  SVNInMemoryCacheSize 1048576\n"
"  SVNCacheTextDeltas On\n"
"  SVNCacheFullTexts On\n"
"&lt;/IfModule&gt;\n"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5350
msgid ""
"So what settings should you use? Certainly you need to consider what "
"resources are available on your server.  To get any benefit out of the cache "
"at all, you'll probably want to let the cache be at least large enough to "
"hold all the files which are most commonly accessed in your repository (for "
"example, your project's <filename>trunk</filename> directory tree)."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><tip><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5359
msgid ""
"Setting the memory cache size to <literal>0</literal> will disable this "
"enhanced caching mechanism and cause Subversion to fall back to using the "
"older cache mechanisms introduced in Subversion 1.6."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><note><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5366
msgid ""
"Currently, only repositories which make use of the FSFS backend data store "
"make use of this data caching functionality."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5375
msgid "Network Compression of Data"
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5377
msgid ""
"Compressing the data transmitted across the wire can greatly reduce the size "
"of those network transmissions, but comes at the cost of server (and client) "
"CPU cycles.  Depending on your server's CPU capacity, the typical access "
"patterns of the clients who use your servers, and the bandwidth of the "
"networks between them, you might wish to fine tune just how hard your server "
"will work to compress the data it sends across the wire.  To assist with "
"this fine tuning process, Subversion 1.7 offers the <option>--compression</"
"option> (<option>-c</option>)  option to <command>svnserve</command> and the "
"<literal>SVNCompressionLevel</literal> directive for <command>mod_dav_svn</"
"command>.  Both accept a value which is an integer between 0 and 9 "
"(inclusive), where 9 offers the best compression of wire data, and 0 "
"disables compression altogether."
msgstr ""

#. type: Content of: <chapter><sect1><sect2><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5394
msgid ""
"For example, on a local area network (LAN) with 1-Gigabit connections, it "
"might not make sense to have the server compress its network transmissions "
"(which also forces the clients to decompress them), as the network itself is "
"so fast that users won't really benefit from the smaller overall network "
"payload.  On the other hand, servers which are accessed primarily by clients "
"with low-bandwidth connections would be doing those clients a favor by "
"minimizing the overall size of its network communications."
msgstr ""

#. type: Content of: <chapter><sect1><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5413
msgid "Supporting Multiple Repository Access Methods"
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5415
msgid ""
"You've seen how a repository can be accessed in many different ways.  But is "
"it possible&mdash;or safe&mdash;for your repository to be accessed by "
"multiple methods simultaneously? The answer is yes, provided you use a bit "
"of foresight."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5420
msgid ""
"At any given time, these processes may require read and write access to your "
"repository:"
msgstr ""

#. type: Content of: <chapter><sect1><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5425
msgid ""
"Regular system users using a Subversion client (as themselves) to access the "
"repository directly via <literal>file://</literal> URLs"
msgstr ""

#. type: Content of: <chapter><sect1><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5430
msgid ""
"Regular system users connecting to SSH-spawned private <command>svnserve</"
"command> processes (running as themselves), which access the repository"
msgstr ""

#. type: Content of: <chapter><sect1><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5435
msgid ""
"An <command>svnserve</command> process&mdash;either a daemon or one launched "
"by <command>inetd</command>&mdash;running as a particular fixed user"
msgstr ""

#. type: Content of: <chapter><sect1><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5441
msgid ""
"An Apache <command>httpd</command> process, running as a particular fixed "
"user"
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5446
msgid ""
"The most common problem administrators run into is repository ownership and "
"permissions.  Does every process (or user) in the preceding list have the "
"rights to read and write the repository's underlying data files? Assuming "
"you have a Unix-like operating system, a straightforward approach might be "
"to place every potential repository user into a new <literal>svn</literal> "
"group, and make the repository wholly owned by that group.  But even that's "
"not enough, because a process may write to the database files using an "
"unfriendly umask&mdash;one that prevents access by other users."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5457
msgid ""
"So the next step beyond setting up a common group for repository users is to "
"force every repository-accessing process to use a sane umask.  For users "
"accessing the repository directly, you can make the <command>svn</command> "
"program into a wrapper script that first runs <userinput>umask 002</"
"userinput> and then runs the real <command>svn</command> client program.  "
"You can write a similar wrapper script for the <command>svnserve</command> "
"program, and add a <userinput>umask 002</userinput> command to Apache's own "
"startup script, <filename>apachectl</filename>.  For example:"
msgstr ""

#. type: Content of: <chapter><sect1><informalexample><screen>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5470
#, no-wrap
msgid ""
"$ cat /usr/bin/svn\n"
"\n"
"#!/bin/sh\n"
"\n"
"umask 002\n"
"/usr/bin/svn-real \"$@\"\n"
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5479
msgid ""
"Another common problem is often encountered on Unix-like systems.  If your "
"repository is backed by Berkeley DB, for example, it occasionally creates "
"new log files to journal its actions.  Even if the Berkeley DB repository is "
"wholly owned by the <command>svn</command> group, these newly created log "
"files won't necessarily be owned by that same group, which then creates more "
"permissions problems for your users.  A good workaround is to set the group "
"SUID bit on the repository's <filename>db</filename> directory.  This causes "
"all newly created log files to have the same group owner as the parent "
"directory."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5491
msgid ""
"Once you've jumped through these hoops, your repository should be accessible "
"by all the necessary processes.  It may seem a bit messy and complicated, "
"but the problems of having multiple users sharing write access to common "
"files are classic ones that are not often elegantly solved."
msgstr ""

#. type: Content of: <chapter><sect1><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5497
msgid ""
"Fortunately, most repository administrators will never <emphasis>need</"
"emphasis> to have such a complex configuration.  Users who wish to access "
"repositories that live on the same machine are not limited to using "
"<literal>file://</literal> access URLs&mdash;they can typically contact the "
"Apache HTTP server or <command>svnserve</command> using <literal>localhost</"
"literal> for the server name in their <literal>http://</literal> or "
"<literal>svn://</literal> URL.  And maintaining multiple server processes "
"for your Subversion repositories is likely to be more of a headache than "
"necessary.  We recommend that you choose a single server that best meets "
"your needs and stick with it!"
msgstr ""

#. type: Content of: <chapter><sect1><sidebar><title>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5511
msgid "The svn+ssh:// Server Checklist"
msgstr ""

#. type: Content of: <chapter><sect1><sidebar><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5513
msgid ""
"It can be quite tricky to get a bunch of users with existing SSH accounts to "
"share a repository without permissions problems.  If you're confused about "
"all the things that you (as an administrator) need to do on a Unix-like "
"system, here's a quick checklist that resummarizes some of the topics "
"discussed in this section:"
msgstr ""

#. type: Content of: <chapter><sect1><sidebar><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5522
msgid ""
"All of your SSH users need to be able to read and write to the repository, "
"so put all the SSH users into a single group."
msgstr ""

#. type: Content of: <chapter><sect1><sidebar><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5527
msgid "Make the repository wholly owned by that group."
msgstr ""

#. type: Content of: <chapter><sect1><sidebar><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5530
msgid "Set the group permissions to read/write."
msgstr ""

#. type: Content of: <chapter><sect1><sidebar><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5533
msgid ""
"Your users need to use a sane umask when accessing the repository, so make "
"sure <command>svnserve</command> (<filename>/usr/bin/svnserve</filename>, or "
"wherever it lives in <literal>$PATH</literal>) is actually a wrapper script "
"that runs <userinput>umask 002</userinput> and executes the real "
"<command>svnserve</command> binary."
msgstr ""

#. type: Content of: <chapter><sect1><sidebar><itemizedlist><listitem><para>
#: /home/matsuand/local/src/subversion/svnbook-source/trunk/en/book/ch06-server-configuration.xml:5542
msgid ""
"Take similar measures when using <command>svnlook</command> and "
"<command>svnadmin</command>.  Either run them with a sane umask or wrap them "
"as just described."
msgstr ""
